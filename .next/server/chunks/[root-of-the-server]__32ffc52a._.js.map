{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/firebase-admin.ts"],"sourcesContent":["// src/lib/firebase-admin.ts\nimport * as admin from 'firebase-admin';\nimport type { Atm } from '@/types';\n\n// Garante que a inicialização ocorra apenas uma vez.\nif (!admin.apps.length) {\n  try {\n    // A chave privada precisa ter os caracteres de nova linha corretamente escapados.\n    const privateKey = (process.env.FIREBASE_ADMIN_PRIVATE_KEY || '').replace(/\\\\n/g, '\\n');\n    \n    if (!process.env.FIREBASE_PROJECT_ID || !privateKey || !process.env.FIREBASE_CLIENT_EMAIL) {\n        throw new Error(\"As credenciais de serviço do Firebase Admin estão em falta ou incompletas.\");\n    }\n\n    admin.initializeApp({\n      credential: admin.credential.cert({\n        projectId: process.env.FIREBASE_PROJECT_ID,\n        privateKey: privateKey,\n        clientEmail: process.env.FIREBASE_CLIENT_EMAIL,\n      }),\n    });\n     console.log(\"Firebase Admin SDK inicializado com sucesso.\");\n  } catch (error: any) {\n    console.error(\"Erro CRÍTICO ao inicializar o Firebase Admin SDK:\", error.message);\n  }\n}\n\nconst db = admin.firestore();\n\nexport async function getAtms(): Promise<Atm[]> {\n  try {\n    const atmsSnapshot = await db.collection('atms').get();\n    if (atmsSnapshot.empty) {\n      console.log(\"Nenhum ATM encontrado no Firestore.\");\n      return [];\n    }\n\n    const atms = atmsSnapshot.docs.map(doc => {\n      const data = doc.data();\n      return {\n        id: doc.id,\n        ...data,\n        lastUpdate: data.lastUpdate?.toDate?.().toISOString() || new Date().toISOString(),\n        reports: data.reports?.map((report: any) => ({\n          ...report,\n          timestamp: report.timestamp?.toDate?.().toISOString() || report.timestamp || new Date().toISOString(),\n        })) || [],\n      } as Atm;\n    });\n    return atms;\n  } catch (error) {\n    console.error(\"Erro ao buscar ATMs no Firestore:\", error);\n    // Em caso de erro, retorna um array vazio para não quebrar a aplicação\n    return []; \n  }\n}\n\nexport async function getAtmById(id: string): Promise<Atm | null> {\n  try {\n    const atmDoc = await db.collection('atms').doc(id).get();\n  \n    if (!atmDoc.exists) {\n      console.log(`ATM com id ${id} não encontrado.`);\n      return null;\n    }\n  \n    const data = atmDoc.data()!;\n      \n    return {\n      id: atmDoc.id,\n      ...data,\n      lastUpdate: data.lastUpdate?.toDate?.().toISOString() || new Date().toISOString(),\n      reports: data.reports?.map((report: any) => ({\n        ...report,\n        timestamp: report.timestamp?.toDate?.().toISOString() || report.timestamp || new Date().toISOString(),\n      })) || [],\n    } as Atm;\n  \n  } catch (error) {\n    console.error(`Erro ao buscar ATM com id ${id}:`, error);\n    return null;\n  }\n}\n"],"names":[],"mappings":"AAAA,4BAA4B;;;;;AAC5B;;AAGA,qDAAqD;AACrD,IAAI,CAAC,2HAAA,CAAA,OAAU,CAAC,MAAM,EAAE;IACtB,IAAI;QACF,kFAAkF;QAClF,MAAM,aAAa,CAAC,QAAQ,GAAG,CAAC,0BAA0B,IAAI,EAAE,EAAE,OAAO,CAAC,QAAQ;QAElF,IAAI,CAAC,QAAQ,GAAG,CAAC,mBAAmB,IAAI,CAAC,cAAc,CAAC,QAAQ,GAAG,CAAC,qBAAqB,EAAE;YACvF,MAAM,IAAI,MAAM;QACpB;QAEA,CAAA,GAAA,2HAAA,CAAA,gBAAmB,AAAD,EAAE;YAClB,YAAY,2HAAA,CAAA,aAAgB,CAAC,IAAI,CAAC;gBAChC,WAAW,QAAQ,GAAG,CAAC,mBAAmB;gBAC1C,YAAY;gBACZ,aAAa,QAAQ,GAAG,CAAC,qBAAqB;YAChD;QACF;QACC,QAAQ,GAAG,CAAC;IACf,EAAE,OAAO,OAAY;QACnB,QAAQ,KAAK,CAAC,qDAAqD,MAAM,OAAO;IAClF;AACF;AAEA,MAAM,KAAK,CAAA,GAAA,2HAAA,CAAA,YAAe,AAAD;AAElB,eAAe;IACpB,IAAI;QACF,MAAM,eAAe,MAAM,GAAG,UAAU,CAAC,QAAQ,GAAG;QACpD,IAAI,aAAa,KAAK,EAAE;YACtB,QAAQ,GAAG,CAAC;YACZ,OAAO,EAAE;QACX;QAEA,MAAM,OAAO,aAAa,IAAI,CAAC,GAAG,CAAC,CAAA;YACjC,MAAM,OAAO,IAAI,IAAI;YACrB,OAAO;gBACL,IAAI,IAAI,EAAE;gBACV,GAAG,IAAI;gBACP,YAAY,KAAK,UAAU,EAAE,WAAW,iBAAiB,IAAI,OAAO,WAAW;gBAC/E,SAAS,KAAK,OAAO,EAAE,IAAI,CAAC,SAAgB,CAAC;wBAC3C,GAAG,MAAM;wBACT,WAAW,OAAO,SAAS,EAAE,WAAW,iBAAiB,OAAO,SAAS,IAAI,IAAI,OAAO,WAAW;oBACrG,CAAC,MAAM,EAAE;YACX;QACF;QACA,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,qCAAqC;QACnD,uEAAuE;QACvE,OAAO,EAAE;IACX;AACF;AAEO,eAAe,WAAW,EAAU;IACzC,IAAI;QACF,MAAM,SAAS,MAAM,GAAG,UAAU,CAAC,QAAQ,GAAG,CAAC,IAAI,GAAG;QAEtD,IAAI,CAAC,OAAO,MAAM,EAAE;YAClB,QAAQ,GAAG,CAAC,CAAC,WAAW,EAAE,GAAG,gBAAgB,CAAC;YAC9C,OAAO;QACT;QAEA,MAAM,OAAO,OAAO,IAAI;QAExB,OAAO;YACL,IAAI,OAAO,EAAE;YACb,GAAG,IAAI;YACP,YAAY,KAAK,UAAU,EAAE,WAAW,iBAAiB,IAAI,OAAO,WAAW;YAC/E,SAAS,KAAK,OAAO,EAAE,IAAI,CAAC,SAAgB,CAAC;oBAC3C,GAAG,MAAM;oBACT,WAAW,OAAO,SAAS,EAAE,WAAW,iBAAiB,OAAO,SAAS,IAAI,IAAI,OAAO,WAAW;gBACrG,CAAC,MAAM,EAAE;QACX;IAEF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,CAAC,0BAA0B,EAAE,GAAG,CAAC,CAAC,EAAE;QAClD,OAAO;IACT;AACF","debugId":null}},
    {"offset": {"line": 150, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/api/atms/%5Bid%5D/route.ts"],"sourcesContent":["// src/app/api/atms/[id]/route.ts\nimport { getAtmById } from '@/lib/firebase-admin';\nimport { NextResponse } from 'next/server';\n\nexport async function GET(\n  request: Request,\n  { params }: { params: { id: string } }\n) {\n  try {\n    const id = params.id;\n    if (!id) {\n      return NextResponse.json({ error: 'ATM ID is required' }, { status: 400 });\n    }\n    const atm = await getAtmById(id);\n    if (!atm) {\n      return NextResponse.json({ error: 'ATM not found' }, { status: 404 });\n    }\n    return NextResponse.json(atm);\n  } catch (error) {\n    console.error(`Error fetching ATM ${params.id}:`, error);\n    return NextResponse.json({ error: 'Internal Server Error' }, { status: 500 });\n  }\n}\n"],"names":[],"mappings":"AAAA,iCAAiC;;;;AACjC;AACA;;;AAEO,eAAe,IACpB,OAAgB,EAChB,EAAE,MAAM,EAA8B;IAEtC,IAAI;QACF,MAAM,KAAK,OAAO,EAAE;QACpB,IAAI,CAAC,IAAI;YACP,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAqB,GAAG;gBAAE,QAAQ;YAAI;QAC1E;QACA,MAAM,MAAM,MAAM,CAAA,GAAA,iIAAA,CAAA,aAAU,AAAD,EAAE;QAC7B,IAAI,CAAC,KAAK;YACR,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAgB,GAAG;gBAAE,QAAQ;YAAI;QACrE;QACA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,CAAC,mBAAmB,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC,EAAE;QAClD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAwB,GAAG;YAAE,QAAQ;QAAI;IAC7E;AACF","debugId":null}}]
}