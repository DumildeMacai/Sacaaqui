{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 172, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/firebase/init.ts"],"sourcesContent":["// src/firebase/init.ts\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth } from \"firebase/auth\";\nimport { getFirestore } from \"firebase/firestore\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAEC8Imf55z2TcJBLh4k01tN4ZEYA4a8S4\",\n  authDomain: \"atm-locator-nbjla.firebaseapp.com\",\n  projectId: \"atm-locator-nbjla\",\n  storageBucket: \"atm-locator-nbjla.firebasestorage.app\",\n  messagingSenderId: \"717294013912\",\n  appId: \"1:717294013912:web:b2016cf45688da0fc6b6ad\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n\n// Initialize services\nconst auth = getAuth(app);\nconst db = getFirestore(app);\n\nexport { auth, db };"],"names":[],"mappings":"AAAA,uBAAuB;;;;;AACvB;AAAA;AACA;AAAA;AACA;AAAA;;;;AAEA,MAAM,iBAAiB;IACrB,QAAQ;IACR,YAAY;IACZ,WAAW;IACX,eAAe;IACf,mBAAmB;IACnB,OAAO;AACT;AAEA,sBAAsB;AACtB,MAAM,MAAM,CAAA,GAAA,sLAAA,CAAA,gBAAa,AAAD,EAAE;AAE1B,sBAAsB;AACtB,MAAM,OAAO,CAAA,GAAA,2OAAA,CAAA,UAAO,AAAD,EAAE;AACrB,MAAM,KAAK,CAAA,GAAA,mKAAA,CAAA,eAAY,AAAD,EAAE","debugId":null}},
    {"offset": {"line": 214, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/api/atms/route.ts"],"sourcesContent":["// src/app/api/atms/route.ts\nimport { db } from '@/firebase/init';\nimport { collection, getDocs, addDoc, serverTimestamp, query } from 'firebase/firestore';\nimport { NextResponse, type NextRequest } from 'next/server';\nimport type { Atm } from '@/types';\n\n// This GET endpoint is no longer used by the frontend pages, but is kept for potential future use or direct API access.\n// The frontend now fetches data directly using the Firebase Client SDK.\nexport async function GET(request: NextRequest) {\n  try {\n    const q = query(collection(db, \"atms\"));\n    const atmsSnapshot = await getDocs(q);\n    \n    if (atmsSnapshot.empty) {\n      return NextResponse.json([]);\n    }\n\n    const convertTimestampToString = (timestamp: any): string => {\n        if (timestamp && typeof timestamp.toDate === 'function') {\n            return timestamp.toDate().toISOString();\n        }\n        if (typeof timestamp === 'string') {\n            return timestamp;\n        }\n        return new Date(0).toISOString(); \n    };\n\n    const atms: Atm[] = atmsSnapshot.docs.map(doc => {\n      const data = doc.data();\n      const reports = (data.reports || []).map((report: any) => ({\n        ...report,\n        timestamp: convertTimestampToString(report.timestamp),\n      }));\n\n      return {\n        id: doc.id,\n        name: data.name || '',\n        address: data.address || '',\n        location: data.location || { lat: 0, lng: 0 },\n        status: data.status || 'desconhecido',\n        details: data.details || '',\n        lastUpdate: convertTimestampToString(data.lastUpdate),\n        reports: reports,\n      };\n    });\n\n    return NextResponse.json(atms);\n  } catch (error) {\n    console.error('Error fetching ATMs from Firestore:', error);\n    const errorMessage = error instanceof Error ? error.message : 'An unknown error occurred';\n    return NextResponse.json({ error: 'Internal Server Error', details: errorMessage }, { status: 500 });\n  }\n}\n\nexport async function POST(request: Request) {\n    try {\n        const body: Omit<Atm, 'id' | 'status' | 'lastUpdate' | 'reports'> = await request.json();\n\n        if (!body.name || !body.address || !body.location || typeof body.location.lat !== 'number' || typeof body.location.lng !== 'number') {\n            return NextResponse.json({ error: 'Missing or invalid required ATM fields: name, address, location (lat, lng).' }, { status: 400 });\n        }\n        \n        const newAtmPayload = {\n            ...body,\n            status: 'desconhecido',\n            lastUpdate: serverTimestamp(),\n            reports: [],\n            details: body.details || '',\n        };\n\n        const docRef = await addDoc(collection(db, 'atms'), newAtmPayload);\n        \n        return NextResponse.json({ id: docRef.id, message: 'ATM added successfully' }, { status: 201 });\n\n    } catch (error) {\n        console.error('Error adding ATM with Firestore Client:', error);\n        const errorMessage = error instanceof Error ? error.message : 'An unknown error occurred';\n        return NextResponse.json({ error: 'Internal Server Error', details: errorMessage }, { status: 500 });\n    }\n}\n"],"names":[],"mappings":"AAAA,4BAA4B;;;;;AAC5B;AACA;AAAA;AACA;;;;AAKO,eAAe,IAAI,OAAoB;IAC5C,IAAI;QACF,MAAM,IAAI,CAAA,GAAA,mKAAA,CAAA,QAAK,AAAD,EAAE,CAAA,GAAA,mKAAA,CAAA,aAAU,AAAD,EAAE,yHAAA,CAAA,KAAE,EAAE;QAC/B,MAAM,eAAe,MAAM,CAAA,GAAA,mKAAA,CAAA,UAAO,AAAD,EAAE;QAEnC,IAAI,aAAa,KAAK,EAAE;YACtB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC,EAAE;QAC7B;QAEA,MAAM,2BAA2B,CAAC;YAC9B,IAAI,aAAa,OAAO,UAAU,MAAM,KAAK,YAAY;gBACrD,OAAO,UAAU,MAAM,GAAG,WAAW;YACzC;YACA,IAAI,OAAO,cAAc,UAAU;gBAC/B,OAAO;YACX;YACA,OAAO,IAAI,KAAK,GAAG,WAAW;QAClC;QAEA,MAAM,OAAc,aAAa,IAAI,CAAC,GAAG,CAAC,CAAA;YACxC,MAAM,OAAO,IAAI,IAAI;YACrB,MAAM,UAAU,CAAC,KAAK,OAAO,IAAI,EAAE,EAAE,GAAG,CAAC,CAAC,SAAgB,CAAC;oBACzD,GAAG,MAAM;oBACT,WAAW,yBAAyB,OAAO,SAAS;gBACtD,CAAC;YAED,OAAO;gBACL,IAAI,IAAI,EAAE;gBACV,MAAM,KAAK,IAAI,IAAI;gBACnB,SAAS,KAAK,OAAO,IAAI;gBACzB,UAAU,KAAK,QAAQ,IAAI;oBAAE,KAAK;oBAAG,KAAK;gBAAE;gBAC5C,QAAQ,KAAK,MAAM,IAAI;gBACvB,SAAS,KAAK,OAAO,IAAI;gBACzB,YAAY,yBAAyB,KAAK,UAAU;gBACpD,SAAS;YACX;QACF;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,uCAAuC;QACrD,MAAM,eAAe,iBAAiB,QAAQ,MAAM,OAAO,GAAG;QAC9D,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;YAAyB,SAAS;QAAa,GAAG;YAAE,QAAQ;QAAI;IACpG;AACF;AAEO,eAAe,KAAK,OAAgB;IACvC,IAAI;QACA,MAAM,OAA8D,MAAM,QAAQ,IAAI;QAEtF,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,OAAO,IAAI,CAAC,KAAK,QAAQ,IAAI,OAAO,KAAK,QAAQ,CAAC,GAAG,KAAK,YAAY,OAAO,KAAK,QAAQ,CAAC,GAAG,KAAK,UAAU;YACjI,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAA8E,GAAG;gBAAE,QAAQ;YAAI;QACrI;QAEA,MAAM,gBAAgB;YAClB,GAAG,IAAI;YACP,QAAQ;YACR,YAAY,CAAA,GAAA,mKAAA,CAAA,kBAAe,AAAD;YAC1B,SAAS,EAAE;YACX,SAAS,KAAK,OAAO,IAAI;QAC7B;QAEA,MAAM,SAAS,MAAM,CAAA,GAAA,mKAAA,CAAA,SAAM,AAAD,EAAE,CAAA,GAAA,mKAAA,CAAA,aAAU,AAAD,EAAE,yHAAA,CAAA,KAAE,EAAE,SAAS;QAEpD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,IAAI,OAAO,EAAE;YAAE,SAAS;QAAyB,GAAG;YAAE,QAAQ;QAAI;IAEjG,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,2CAA2C;QACzD,MAAM,eAAe,iBAAiB,QAAQ,MAAM,OAAO,GAAG;QAC9D,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;YAAyB,SAAS;QAAa,GAAG;YAAE,QAAQ;QAAI;IACtG;AACJ","debugId":null}}]
}