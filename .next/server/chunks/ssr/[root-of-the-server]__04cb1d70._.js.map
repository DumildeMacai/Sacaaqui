{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 30, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/atm-list.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const AtmList = registerClientReference(\n    function() { throw new Error(\"Attempted to call AtmList() from the server but AtmList is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/atm-list.tsx <module evaluation>\",\n    \"AtmList\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,UAAU,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACzC;IAAa,MAAM,IAAI,MAAM;AAA8N,GAC3P,6DACA","debugId":null}},
    {"offset": {"line": 44, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/atm-list.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const AtmList = registerClientReference(\n    function() { throw new Error(\"Attempted to call AtmList() from the server but AtmList is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/atm-list.tsx\",\n    \"AtmList\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,UAAU,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACzC;IAAa,MAAM,IAAI,MAAM;AAA8N,GAC3P,yCACA","debugId":null}},
    {"offset": {"line": 58, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 172, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/firebase/init.ts"],"sourcesContent":["// src/firebase/init.ts\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth } from \"firebase/auth\";\nimport { getFirestore } from \"firebase/firestore\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAEC8Imf55z2TcJBLh4k01tN4ZEYA4a8S4\",\n  authDomain: \"atm-locator-nbjla.firebaseapp.com\",\n  projectId: \"atm-locator-nbjla\",\n  storageBucket: \"atm-locator-nbjla.firebasestorage.app\",\n  messagingSenderId: \"717294013912\",\n  appId: \"1:717294013912:web:b2016cf45688da0fc6b6ad\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n\n// Initialize services\nconst auth = getAuth(app);\nconst db = getFirestore(app);\n\nexport { auth, db };"],"names":[],"mappings":"AAAA,uBAAuB;;;;;AACvB;AAAA;AACA;AAAA;AACA;AAAA;;;;AAEA,MAAM,iBAAiB;IACrB,QAAQ;IACR,YAAY;IACZ,WAAW;IACX,eAAe;IACf,mBAAmB;IACnB,OAAO;AACT;AAEA,sBAAsB;AACtB,MAAM,MAAM,CAAA,GAAA,oLAAA,CAAA,gBAAa,AAAD,EAAE;AAE1B,sBAAsB;AACtB,MAAM,OAAO,CAAA,GAAA,yOAAA,CAAA,UAAO,AAAD,EAAE;AACrB,MAAM,KAAK,CAAA,GAAA,iKAAA,CAAA,eAAY,AAAD,EAAE","debugId":null}},
    {"offset": {"line": 214, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/firebase/adminInit.ts"],"sourcesContent":["import * as admin from 'firebase-admin';\n\nconsole.log(\"Iniciando inicialização do Firebase Admin SDK...\"); // Log de início\n\n// Carregue o conteúdo da chave privada da variável de ambiente\nconst privateKey = process.env.FIREBASE_ADMIN_PRIVATE_KEY;\n\nconsole.log(\"FIREBASE_ADMIN_PRIVATE_KEY carregada?\", !!privateKey); // Verifica se a chave privada foi carregada\n\n// Verifique se a chave privada foi carregada\nif (!privateKey) {\n  console.error(\"FIREBASE_ADMIN_PRIVATE_KEY não está configurada nas variáveis de ambiente.\");\n  // Em um ambiente de produção, você pode querer adicionar um mecanismo de fallback ou sair do processo\n}\n\n// Carregue as credenciais da conta de serviço a partir da variável de ambiente\nconst serviceAccount = {\n  projectId: process.env.FIREBASE_PROJECT_ID, // Defina esta variável de ambiente\n  privateKey: privateKey ? privateKey.replace(/\\n/g, '\\n') : undefined, // Substitui \n  // por quebras de linha reais, verifica se privateKey existe\n  clientEmail: process.env.FIREBASE_CLIENT_EMAIL, // Defina esta variável de ambiente\n};\n\nconsole.log(\"Credenciais da conta de serviço carregadas:\", { // Log das credenciais carregadas (sem a chave privada completa) ...privateKey é intencional para não expor a chave completa no log\n  projectId: serviceAccount.projectId,\n  clientEmail: serviceAccount.clientEmail,\n  privateKey: serviceAccount.privateKey ? \"[Chave privada carregada]\" : \"[Chave privada ausente]\"\n});\n\nif (!admin.apps.length) {\n  try {\n    admin.initializeApp({\n      credential: admin.credential.cert(serviceAccount),\n      databaseURL: 'https://atm-locator-nbjla.firebaseio.com' // Substitua pelo URL do seu projeto se necessário\n    });\n    console.log(\"Firebase Admin SDK inicializado com sucesso!\"); // Log de sucesso na inicialização\n  } catch (error) {\n    console.error(\"Erro ao inicializar Firebase Admin SDK:\", error); // Log de erro na inicialização\n  }\n} else {\n  console.log(\"Firebase Admin SDK já inicializado, usando instância existente.\"); // Log se já estiver inicializado\n}\n\n/**\n * Retorna a instância do Firestore do Admin SDK.\n * Garante que o aplicativo Admin seja inicializado antes de acessar o Firestore.\n * @returns A instância do Firestore.\n */\nexport function getAdminDb() {\n  if (admin.apps.length === 0) {\n    throw new Error(\"Firebase Admin SDK não foi inicializado. Chame initializeApp antes de getAdminDb.\");\n  }\n  console.log(\"Obtendo instância do Admin Firestore...\"); // Log ao obter a instância\n  return admin.firestore();\n}\n"],"names":[],"mappings":";;;AAAA;;AAEA,QAAQ,GAAG,CAAC,qDAAqD,gBAAgB;AAEjF,+DAA+D;AAC/D,MAAM,aAAa,QAAQ,GAAG,CAAC,0BAA0B;AAEzD,QAAQ,GAAG,CAAC,yCAAyC,CAAC,CAAC,aAAa,4CAA4C;AAEhH,6CAA6C;AAC7C,IAAI,CAAC,YAAY;IACf,QAAQ,KAAK,CAAC;AACd,sGAAsG;AACxG;AAEA,+EAA+E;AAC/E,MAAM,iBAAiB;IACrB,WAAW,QAAQ,GAAG,CAAC,mBAAmB;IAC1C,YAAY,aAAa,WAAW,OAAO,CAAC,OAAO,QAAQ;IAC3D,4DAA4D;IAC5D,aAAa,QAAQ,GAAG,CAAC,qBAAqB;AAChD;AAEA,QAAQ,GAAG,CAAC,+CAA+C;IACzD,WAAW,eAAe,SAAS;IACnC,aAAa,eAAe,WAAW;IACvC,YAAY,eAAe,UAAU,GAAG,8BAA8B;AACxE;AAEA,IAAI,CAAC,2HAAA,CAAA,OAAU,CAAC,MAAM,EAAE;IACtB,IAAI;QACF,CAAA,GAAA,2HAAA,CAAA,gBAAmB,AAAD,EAAE;YAClB,YAAY,2HAAA,CAAA,aAAgB,CAAC,IAAI,CAAC;YAClC,aAAa,2CAA2C,kDAAkD;QAC5G;QACA,QAAQ,GAAG,CAAC,iDAAiD,kCAAkC;IACjG,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,2CAA2C,QAAQ,+BAA+B;IAClG;AACF,OAAO;IACL,QAAQ,GAAG,CAAC,oEAAoE,iCAAiC;AACnH;AAOO,SAAS;IACd,IAAI,2HAAA,CAAA,OAAU,CAAC,MAAM,KAAK,GAAG;QAC3B,MAAM,IAAI,MAAM;IAClB;IACA,QAAQ,GAAG,CAAC,4CAA4C,2BAA2B;IACnF,OAAO,CAAA,GAAA,2HAAA,CAAA,YAAe,AAAD;AACvB","debugId":null}}]
}