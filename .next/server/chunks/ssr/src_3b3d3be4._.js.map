{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/i18n.ts"],"sourcesContent":["\nimport {notFound} from 'next/navigation';\nimport {getRequestConfig} from 'next-intl/server';\n\n// Can be imported from a shared config\nconst locales = ['en-US', 'pt-BR'];\n\nexport default getRequestConfig(async ({locale}) => {\n  // Validate that the incoming `locale` parameter is valid\n  if (!locales.includes(locale as any)) notFound();\n\n  return {\n    messages: (await import(`../messages/${locale}.json`)).default\n  };\n});\n"],"names":[],"mappings":";;;AACA;AAAA;AACA;;;AAEA,uCAAuC;AACvC,MAAM,UAAU;IAAC;IAAS;CAAQ;uCAEnB,CAAA,GAAA,2OAAA,CAAA,mBAAgB,AAAD,EAAE,OAAO,EAAC,MAAM,EAAC;IAC7C,yDAAyD;IACzD,IAAI,CAAC,QAAQ,QAAQ,CAAC,SAAgB,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD;IAE7C,OAAO;QACL,UAAU,CAAC;;;;;;;;;kBAAa,CAAC,YAAY,EAAE,OAAO,KAAK,CAAC,CAAC,EAAE,OAAO;IAChE;AACF","debugId":null}},
    {"offset": {"line": 42, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/toaster.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Toaster = registerClientReference(\n    function() { throw new Error(\"Attempted to call Toaster() from the server but Toaster is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/toaster.tsx <module evaluation>\",\n    \"Toaster\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,UAAU,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACzC;IAAa,MAAM,IAAI,MAAM;AAA8N,GAC3P,+DACA","debugId":null}},
    {"offset": {"line": 56, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/toaster.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Toaster = registerClientReference(\n    function() { throw new Error(\"Attempted to call Toaster() from the server but Toaster is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/toaster.tsx\",\n    \"Toaster\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,UAAU,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACzC;IAAa,MAAM,IAAI,MAAM;AAA8N,GAC3P,2CACA","debugId":null}},
    {"offset": {"line": 70, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 80, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/%5Blocale%5D/layout.tsx"],"sourcesContent":["import { NextIntlClientProvider } from 'next-intl';\nimport { getMessages } from 'next-intl/server';\nimport '../globals.css';\nimport React from 'react';\nimport { Toaster } from '@/components/ui/toaster';\n\nexport default async function LocaleLayout({\n  children,\n  params: { locale },\n}: {\n  children: React.ReactNode;\n  params: { locale: string };\n}) {\n  const messages = await getMessages();\n\n  return (\n      <NextIntlClientProvider locale={locale} messages={messages}>\n        {children}\n        <Toaster />\n      </NextIntlClientProvider>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AAGA;;;;;;AAEe,eAAe,aAAa,EACzC,QAAQ,EACR,QAAQ,EAAE,MAAM,EAAE,EAInB;IACC,MAAM,WAAW,MAAM,CAAA,GAAA,iOAAA,CAAA,cAAW,AAAD;IAEjC,qBACI,8OAAC,mPAAA,CAAA,yBAAsB;QAAC,QAAQ;QAAQ,UAAU;;YAC/C;0BACD,8OAAC,mIAAA,CAAA,UAAO;;;;;;;;;;;AAGhB","debugId":null}}]
}