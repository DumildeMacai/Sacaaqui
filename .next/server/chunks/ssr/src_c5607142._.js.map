{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE","debugId":null}},
    {"offset": {"line": 130, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/actions/verify-status.ts"],"sourcesContent":["\"use server\";\n\nimport { verifyAtmStatus, type VerifyAtmStatusInput, type VerifyAtmStatusOutput } from \"@/ai/flows/verify-atm-status\";\n\nexport async function verifyAtmStatusAction(input: VerifyAtmStatusInput): Promise<VerifyAtmStatusOutput> {\n    try {\n        const result = await verifyAtmStatus(input);\n        return result;\n    } catch (error) {\n        console.error(\"Error verifying ATM status with AI:\", error);\n        throw new Error(\"AI verification failed.\");\n    }\n}\n"],"names":[],"mappings":";;;;;;IAIsB,wBAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 143, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/alert.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,6JACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG3B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAO,EAAE,oBACnC,8OAAC;QACC,KAAK;QACL,MAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG;AAEpB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,gDAAgD;QAC7D,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,iCAAmB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,iBAAiB,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 207, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/atm-verification-client.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from 'react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from './ui/card';\nimport { Button } from './ui/button';\nimport { Loader2, BrainCircuit, ShieldCheck, HelpCircle } from 'lucide-react';\nimport type { Atm } from '@/types';\nimport { verifyAtmStatusAction } from '@/actions/verify-status';\nimport type { VerifyAtmStatusOutput } from '@/ai/flows/verify-atm-status';\nimport { Alert, AlertDescription, AlertTitle } from './ui/alert';\nimport { Badge } from './ui/badge';\n\n\nexport function AtmVerificationClient({ atm }: { atm: Atm }) {\n    const [loading, setLoading] = useState(false);\n    const [result, setResult] = useState<VerifyAtmStatusOutput | null>(null);\n    const [error, setError] = useState<string | null>(null);\n\n    const handleVerification = async () => {\n        setLoading(true);\n        setError(null);\n        try {\n            const verificationResult = await verifyAtmStatusAction({\n                atmId: atm.id,\n                reports: atm.reports,\n            });\n            setResult(verificationResult);\n        } catch (e) {\n            setError('Falha ao verificar o status. Tente novamente.');\n            console.error(e);\n        } finally {\n            setLoading(false);\n        }\n    };\n    \n    const StatusIcon = ({status}: {status: string}) => {\n        switch (status) {\n            case 'com_dinheiro':\n                return <ShieldCheck className=\"h-5 w-5 text-accent\" />;\n            case 'sem_dinheiro':\n                return <ShieldCheck className=\"h-5 w-5 text-destructive\" />;\n            default:\n                return <HelpCircle className=\"h-5 w-5 text-muted-foreground\" />;\n        }\n    }\n\n    return (\n        <Card className=\"sticky top-24\">\n            <CardHeader>\n                <CardTitle className=\"flex items-center gap-2\">\n                    <BrainCircuit className=\"h-6 w-6 text-primary\" />\n                    Verificação com IA\n                </CardTitle>\n                <CardDescription>\n                    Use nossa IA para analisar os relatos e obter um status verificado.\n                </CardDescription>\n            </CardHeader>\n            <CardContent>\n                <Button onClick={handleVerification} disabled={loading} className=\"w-full\">\n                    {loading ? <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" /> : null}\n                    Verificar Status\n                </Button>\n\n                {error && <p className=\"mt-4 text-sm text-destructive\">{error}</p>}\n\n                {result && (\n                     <Alert className=\"mt-4\">\n                        <StatusIcon status={result.verifiedStatus} />\n                        <AlertTitle className=\"capitalize\">\n                            Status Verificado: {result.verifiedStatus.replace('_', ' ')}\n                        </AlertTitle>\n                        <AlertDescription className=\"space-y-2\">\n                           <p>{result.reasoning}</p>\n                           <p>\n                             Confiança: <Badge variant=\"secondary\">{Math.round(result.confidenceScore * 100)}%</Badge>\n                           </p>\n                        </AlertDescription>\n                    </Alert>\n                )}\n            </CardContent>\n        </Card>\n    );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AAVA;;;;;;;;;AAaO,SAAS,sBAAsB,EAAE,GAAG,EAAgB;IACvD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAgC;IACnE,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAElD,MAAM,qBAAqB;QACvB,WAAW;QACX,SAAS;QACT,IAAI;YACA,MAAM,qBAAqB,MAAM,CAAA,GAAA,sJAAA,CAAA,wBAAqB,AAAD,EAAE;gBACnD,OAAO,IAAI,EAAE;gBACb,SAAS,IAAI,OAAO;YACxB;YACA,UAAU;QACd,EAAE,OAAO,GAAG;YACR,SAAS;YACT,QAAQ,KAAK,CAAC;QAClB,SAAU;YACN,WAAW;QACf;IACJ;IAEA,MAAM,aAAa,CAAC,EAAC,MAAM,EAAmB;QAC1C,OAAQ;YACJ,KAAK;gBACD,qBAAO,8OAAC,oNAAA,CAAA,cAAW;oBAAC,WAAU;;;;;;YAClC,KAAK;gBACD,qBAAO,8OAAC,oNAAA,CAAA,cAAW;oBAAC,WAAU;;;;;;YAClC;gBACI,qBAAO,8OAAC,kNAAA,CAAA,aAAU;oBAAC,WAAU;;;;;;QACrC;IACJ;IAEA,qBACI,8OAAC,gIAAA,CAAA,OAAI;QAAC,WAAU;;0BACZ,8OAAC,gIAAA,CAAA,aAAU;;kCACP,8OAAC,gIAAA,CAAA,YAAS;wBAAC,WAAU;;0CACjB,8OAAC,sNAAA,CAAA,eAAY;gCAAC,WAAU;;;;;;4BAAyB;;;;;;;kCAGrD,8OAAC,gIAAA,CAAA,kBAAe;kCAAC;;;;;;;;;;;;0BAIrB,8OAAC,gIAAA,CAAA,cAAW;;kCACR,8OAAC,kIAAA,CAAA,SAAM;wBAAC,SAAS;wBAAoB,UAAU;wBAAS,WAAU;;4BAC7D,wBAAU,8OAAC,iNAAA,CAAA,UAAO;gCAAC,WAAU;;;;;uCAAiC;4BAAK;;;;;;;oBAIvE,uBAAS,8OAAC;wBAAE,WAAU;kCAAiC;;;;;;oBAEvD,wBACI,8OAAC,iIAAA,CAAA,QAAK;wBAAC,WAAU;;0CACd,8OAAC;gCAAW,QAAQ,OAAO,cAAc;;;;;;0CACzC,8OAAC,iIAAA,CAAA,aAAU;gCAAC,WAAU;;oCAAa;oCACX,OAAO,cAAc,CAAC,OAAO,CAAC,KAAK;;;;;;;0CAE3D,8OAAC,iIAAA,CAAA,mBAAgB;gCAAC,WAAU;;kDACzB,8OAAC;kDAAG,OAAO,SAAS;;;;;;kDACpB,8OAAC;;4CAAE;0DACU,8OAAC,iIAAA,CAAA,QAAK;gDAAC,SAAQ;;oDAAa,KAAK,KAAK,CAAC,OAAO,eAAe,GAAG;oDAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQ7G","debugId":null}},
    {"offset": {"line": 424, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/atm-detail.tsx"],"sourcesContent":["import type { Atm } from '@/types';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { CheckCircle2, CircleSlash, HelpCircle, MapPin, Clock, Info } from 'lucide-react';\nimport { format } from 'date-fns';\nimport { ptBR } from 'date-fns/locale';\nimport { AtmVerificationClient } from './atm-verification-client';\n\ntype StatusVariant = 'default' | 'destructive' | 'secondary';\n\nconst statusMap: { [key in Atm['status']]: { text: string; variant: StatusVariant; icon: React.ReactNode } } = {\n  com_dinheiro: { text: 'Com Dinheiro', variant: 'default', icon: <CheckCircle2 className=\"h-4 w-4 text-accent\" /> },\n  sem_dinheiro: { text: 'Sem Dinheiro', variant: 'destructive', icon: <CircleSlash className=\"h-4 w-4\" /> },\n  desconhecido: { text: 'Desconhecido', variant: 'secondary', icon: <HelpCircle className=\"h-4 w-4\" /> },\n};\n\nexport function AtmDetail({ atm }: { atm: Atm }) {\n  const statusInfo = statusMap[atm.status];\n\n  return (\n    <div className=\"grid gap-8 md:grid-cols-3\">\n        <div className=\"md:col-span-2 space-y-8\">\n            <Card>\n                <CardHeader>\n                    <CardTitle className=\"flex items-center justify-between font-headline text-3xl\">\n                        {atm.name}\n                        <Badge variant={statusInfo.variant} className=\"flex items-center gap-1 text-base\">\n                            {statusInfo.icon}\n                            {statusInfo.text}\n                        </Badge>\n                    </CardTitle>\n                    <CardDescription className=\"flex items-center gap-2 pt-2\">\n                        <MapPin className=\"h-4 w-4\" />\n                        {atm.address}\n                    </CardDescription>\n                </CardHeader>\n                <CardContent>\n                    <div className=\"text-sm text-muted-foreground\">\n                        <p>Última atualização: {format(new Date(atm.lastUpdate), \"dd/MM/yyyy 'às' HH:mm\", { locale: ptBR })}</p>\n                    </div>\n                </CardContent>\n            </Card>\n\n            {atm.details && (\n                <Card>\n                    <CardHeader>\n                        <CardTitle className=\"flex items-center gap-2 text-xl\">\n                           <Info className=\"h-5 w-5\" />\n                           Detalhes Adicionais\n                        </CardTitle>\n                    </CardHeader>\n                    <CardContent>\n                        <p className=\"text-muted-foreground\">{atm.details}</p>\n                    </CardContent>\n                </Card>\n            )}\n\n            <Card>\n                <CardHeader>\n                    <CardTitle>Histórico de Atualizações</CardTitle>\n                </CardHeader>\n                <CardContent>\n                    <ul className=\"space-y-4\">\n                        {atm.reports.map((report, index) => (\n                            <li key={index} className=\"flex items-center justify-between\">\n                                <div className=\"flex items-center gap-3\">\n                                    {report.status === 'com_dinheiro' ? <CheckCircle2 className=\"h-5 w-5 text-accent\" /> : <CircleSlash className=\"h-5 w-5 text-destructive\" />}\n                                    <div>\n                                        <p className=\"font-medium\">Status: {report.status === 'com_dinheiro' ? 'Com Dinheiro' : 'Sem Dinheiro'}</p>\n                                        <p className=\"text-sm text-muted-foreground\">por {report.userName}</p>\n                                    </div>\n                                </div>\n                                <div className=\"text-sm text-muted-foreground flex items-center gap-2\">\n                                   <Clock className=\"h-4 w-4\" />\n                                   {format(new Date(report.timestamp), \"dd/MM 'às' HH:mm\", { locale: ptBR })}\n                                </div>\n                            </li>\n                        ))}\n                    </ul>\n                </CardContent>\n            </Card>\n        </div>\n\n        <div className=\"md:col-span-1\">\n             <AtmVerificationClient atm={atm} />\n        </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 761, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/skeleton.tsx"],"sourcesContent":["import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n"],"names":[],"mappings":";;;;AAAA;;;AAEA,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OACkC;IACrC,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,qCAAqC;QAClD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 785, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/dashboard/atm/%5Bid%5D/page.tsx"],"sourcesContent":["'use client'\nimport { AtmDetail } from '@/components/atm-detail';\nimport { notFound, useParams } from 'next/navigation';\nimport type { Atm } from '@/types';\nimport { useEffect, useState } from 'react';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport { doc, getDoc } from 'firebase/firestore';\nimport { db } from '@/firebase/init';\n\n\n// Helper to convert Firestore Timestamps to ISO strings safely\nconst convertTimestampToString = (timestamp: any): string => {\n  if (timestamp && typeof timestamp.toDate === 'function') {\n    return timestamp.toDate().toISOString();\n  }\n  if (typeof timestamp === 'string') {\n    return timestamp;\n  }\n  // Fallback for null, undefined, or other types\n  return new Date(0).toISOString();\n};\n\n\nexport default function AtmDetailPage() {\n  const params = useParams();\n  const atmId = params.id as string;\n  const [atmData, setAtmData] = useState<Atm | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    if (!atmId) return;\n\n    const fetchAtm = async () => {\n      try {\n        setLoading(true);\n        const atmRef = doc(db, 'atms', atmId);\n        const atmDoc = await getDoc(atmRef);\n\n        if (!atmDoc.exists()) {\n          notFound();\n          return;\n        }\n        \n        const data = atmDoc.data();\n        const reports = (data.reports || []).map((report: any) => ({\n            ...report,\n            timestamp: convertTimestampToString(report.timestamp),\n        }));\n\n        const atm: Atm = {\n            id: atmDoc.id,\n            name: data.name || '',\n            address: data.address || '',\n            location: data.location || { lat: 0, lng: 0 },\n            status: data.status || 'desconhecido',\n            details: data.details || '',\n            lastUpdate: convertTimestampToString(data.lastUpdate),\n            reports: reports,\n        };\n\n        setAtmData(atm);\n\n      } catch (err: any) {\n        console.error(err);\n        setError('Failed to fetch ATM data');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchAtm();\n  }, [atmId]);\n\n  if (loading) {\n    return (\n        <div className=\"grid gap-8 md:grid-cols-3\">\n            <div className=\"md:col-span-2 space-y-8\">\n                <Skeleton className=\"h-40 w-full\" />\n                <Skeleton className=\"h-64 w-full\" />\n            </div>\n            <div className=\"md:col-span-1\">\n                <Skeleton className=\"h-48 w-full\" />\n            </div>\n        </div>\n    );\n  }\n  \n  if (error) {\n      return <div className=\"text-destructive text-center\">Erro ao carregar os dados do ATM. Tente novamente mais tarde.</div>;\n  }\n\n  if (!atmData) {\n    notFound();\n  }\n\n  return <AtmDetail atm={atmData} />;\n}\n"],"names":[],"mappings":";;;;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAPA;;;;;;;;AAUA,+DAA+D;AAC/D,MAAM,2BAA2B,CAAC;IAChC,IAAI,aAAa,OAAO,UAAU,MAAM,KAAK,YAAY;QACvD,OAAO,UAAU,MAAM,GAAG,WAAW;IACvC;IACA,IAAI,OAAO,cAAc,UAAU;QACjC,OAAO;IACT;IACA,+CAA+C;IAC/C,OAAO,IAAI,KAAK,GAAG,WAAW;AAChC;AAGe,SAAS;IACtB,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,QAAQ,OAAO,EAAE;IACvB,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAc;IACnD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAElD,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,CAAC,OAAO;QAEZ,MAAM,WAAW;YACf,IAAI;gBACF,WAAW;gBACX,MAAM,SAAS,CAAA,GAAA,iKAAA,CAAA,MAAG,AAAD,EAAE,uHAAA,CAAA,KAAE,EAAE,QAAQ;gBAC/B,MAAM,SAAS,MAAM,CAAA,GAAA,iKAAA,CAAA,SAAM,AAAD,EAAE;gBAE5B,IAAI,CAAC,OAAO,MAAM,IAAI;oBACpB,CAAA,GAAA,kIAAA,CAAA,WAAQ,AAAD;oBACP;gBACF;gBAEA,MAAM,OAAO,OAAO,IAAI;gBACxB,MAAM,UAAU,CAAC,KAAK,OAAO,IAAI,EAAE,EAAE,GAAG,CAAC,CAAC,SAAgB,CAAC;wBACvD,GAAG,MAAM;wBACT,WAAW,yBAAyB,OAAO,SAAS;oBACxD,CAAC;gBAED,MAAM,MAAW;oBACb,IAAI,OAAO,EAAE;oBACb,MAAM,KAAK,IAAI,IAAI;oBACnB,SAAS,KAAK,OAAO,IAAI;oBACzB,UAAU,KAAK,QAAQ,IAAI;wBAAE,KAAK;wBAAG,KAAK;oBAAE;oBAC5C,QAAQ,KAAK,MAAM,IAAI;oBACvB,SAAS,KAAK,OAAO,IAAI;oBACzB,YAAY,yBAAyB,KAAK,UAAU;oBACpD,SAAS;gBACb;gBAEA,WAAW;YAEb,EAAE,OAAO,KAAU;gBACjB,QAAQ,KAAK,CAAC;gBACd,SAAS;YACX,SAAU;gBACR,WAAW;YACb;QACF;QAEA;IACF,GAAG;QAAC;KAAM;IAEV,IAAI,SAAS;QACX,qBACI,8OAAC;YAAI,WAAU;;8BACX,8OAAC;oBAAI,WAAU;;sCACX,8OAAC,oIAAA,CAAA,WAAQ;4BAAC,WAAU;;;;;;sCACpB,8OAAC,oIAAA,CAAA,WAAQ;4BAAC,WAAU;;;;;;;;;;;;8BAExB,8OAAC;oBAAI,WAAU;8BACX,cAAA,8OAAC,oIAAA,CAAA,WAAQ;wBAAC,WAAU;;;;;;;;;;;;;;;;;IAIlC;IAEA,IAAI,OAAO;QACP,qBAAO,8OAAC;YAAI,WAAU;sBAA+B;;;;;;IACzD;IAEA,IAAI,CAAC,SAAS;QACZ,CAAA,GAAA,kIAAA,CAAA,WAAQ,AAAD;IACT;IAEA,qBAAO,8OAAC,mIAAA,CAAA,YAAS;QAAC,KAAK;;;;;;AACzB","debugId":null}}]
}