{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE","debugId":null}},
    {"offset": {"line": 130, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/actions/verify-status.ts"],"sourcesContent":["\"use server\";\n\nimport { verifyAtmStatus, type VerifyAtmStatusInput, type VerifyAtmStatusOutput } from \"@/ai/flows/verify-atm-status\";\n\nexport async function verifyAtmStatusAction(input: VerifyAtmStatusInput): Promise<VerifyAtmStatusOutput> {\n    try {\n        const result = await verifyAtmStatus(input);\n        return result;\n    } catch (error) {\n        const errorMessage = error instanceof Error ? error.message : 'An unknown error occurred';\n        console.error(\"Error verifying ATM status with AI:\", errorMessage);\n        console.error(\"Full error object:\", error);\n        throw new Error(`AI verification failed: ${errorMessage}`);\n    }\n}\n"],"names":[],"mappings":";;;;;;IAIsB,wBAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 143, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/alert.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,6JACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG3B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAO,EAAE,oBACnC,8OAAC;QACC,KAAK;QACL,MAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG;AAEpB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,gDAAgD;QAC7D,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,iCAAmB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,iBAAiB,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 207, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/actions/update-reputation.ts"],"sourcesContent":["'use server';\n\nimport { updateUserReputation, type UpdateUserReputationInput, type UpdateUserReputationOutput } from \"@/ai/flows/update-user-reputation\";\nimport { db } from \"@/firebase/init\";\nimport { doc, getDoc, updateDoc, increment } from \"firebase/firestore\";\n\nexport async function updateUserReputationAction(input: UpdateUserReputationInput): Promise<void> {\n    try {\n        console.log(\"Starting reputation update action with input:\", input);\n\n        // 1. Get reputation adjustments from the AI\n        const aiResult = await updateUserReputation(input);\n        console.log(\"AI result for reputation updates:\", aiResult);\n\n        if (!aiResult || !aiResult.reputationUpdates || aiResult.reputationUpdates.length === 0) {\n            console.log(\"No reputation updates suggested by AI.\");\n            return;\n        }\n\n        // 2. Apply updates to Firestore in a batch or loop\n        const updatePromises = aiResult.reputationUpdates.map(async (update) => {\n            if (!update.userId || typeof update.reputationChange !== 'number') {\n                console.warn(\"Skipping invalid reputation update:\", update);\n                return;\n            }\n\n            const userRef = doc(db, 'users', update.userId);\n            \n            // Check if user exists before attempting to update\n            const userDoc = await getDoc(userRef);\n            if (!userDoc.exists()) {\n                console.warn(`User with ID ${update.userId} not found. Skipping reputation update.`);\n                return;\n            }\n\n            console.log(`Updating reputation for user ${update.userId} by ${update.reputationChange}`);\n            \n            // Use Firestore's `increment` to safely update the score\n            return updateDoc(userRef, {\n                reputation: increment(update.reputationChange)\n            });\n        });\n\n        await Promise.all(updatePromises);\n        console.log(\"All reputation updates have been processed.\");\n\n    } catch (error) {\n        console.error(\"Error in updateUserReputationAction:\", error);\n        // We don't throw an error to the client, as this is a background process.\n        // Errors are logged on the server.\n    }\n}\n"],"names":[],"mappings":";;;;;;IAMsB,6BAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 220, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/atm-verification-client.tsx"],"sourcesContent":["\n\"use client\";\n\nimport { useState } from 'react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from './ui/card';\nimport { Button } from './ui/button';\nimport { Loader2, BrainCircuit, ShieldCheck, HelpCircle } from 'lucide-react';\nimport type { Atm, Report, User } from '@/types';\nimport { verifyAtmStatusAction } from '@/actions/verify-status';\nimport type { VerifyAtmStatusOutput } from '@/ai/flows/verify-atm-status';\nimport { Alert, AlertDescription, AlertTitle } from './ui/alert';\nimport { Badge } from './ui/badge';\nimport { updateUserReputationAction } from '@/actions/update-reputation';\nimport { useToast } from '@/hooks/use-toast';\nimport { collection, doc, getDoc, getDocs, query, where } from 'firebase/firestore';\nimport { db } from '@/firebase/init';\n\n\nexport function AtmVerificationClient({ atm }: { atm: Atm }) {\n    const [loading, setLoading] = useState(false);\n    const [result, setResult] = useState<VerifyAtmStatusOutput | null>(null);\n    const [error, setError] = useState<string | null>(null);\n    const { toast } = useToast();\n\n    const handleVerification = async () => {\n        setLoading(true);\n        setError(null);\n        setResult(null);\n\n        if (atm.reports.length === 0) {\n            setError(\"Não há relatórios para verificar.\");\n            setLoading(false);\n            return;\n        }\n\n        try {\n            // Step 1: Fetch reputation for all users who reported\n            const userIds = [...new Set(atm.reports.map(r => r.userId))];\n            const userReputations = new Map<string, number>();\n\n            // Fetch each user document to get their reputation\n            for (const userId of userIds) {\n                const userRef = doc(db, 'users', userId);\n                const userDoc = await getDoc(userRef);\n                if (userDoc.exists()) {\n                    userReputations.set(userId, (userDoc.data() as User).reputation || 0);\n                } else {\n                    userReputations.set(userId, 0); // Default to 0 if user not found\n                }\n            }\n            \n            // Step 2: Augment reports with reputation\n            const reportsWithReputation = atm.reports.map(report => ({\n                ...report,\n                userReputation: userReputations.get(report.userId) ?? 0,\n            }));\n\n            // Step 3: Verify the ATM's status\n            const verificationResult = await verifyAtmStatusAction({\n                atmId: atm.id,\n                reports: reportsWithReputation,\n            });\n            setResult(verificationResult);\n\n            // Step 4: If verification is successful and a conclusive status is found,\n            // trigger the reputation update in the background.\n            if (verificationResult && verificationResult.verifiedStatus !== 'desconhecido') {\n                toast({\n                    title: \"Atualizando Reputação\",\n                    description: \"A reputação dos utilizadores que reportaram está a ser ajustada com base na verificação.\"\n                });\n                \n                // This is a fire-and-forget call. We don't need to await it.\n                updateUserReputationAction({\n                    verifiedStatus: verificationResult.verifiedStatus,\n                    reports: atm.reports.map(r => ({ userId: r.userId, status: r.status })),\n                });\n            }\n\n        } catch (e) {\n            setError('Falha ao verificar o status. Tente novamente.');\n            console.error(e);\n        } finally {\n            setLoading(false);\n        }\n    };\n    \n    const StatusIcon = ({status}: {status: string}) => {\n        switch (status) {\n            case 'com_dinheiro':\n                return <ShieldCheck className=\"h-5 w-5 text-accent\" />;\n            case 'sem_dinheiro':\n                return <ShieldCheck className=\"h-5 w-5 text-destructive\" />;\n            default:\n                return <HelpCircle className=\"h-5 w-5 text-muted-foreground\" />;\n        }\n    }\n\n    return (\n        <Card className=\"sticky top-24\">\n            <CardHeader>\n                <CardTitle className=\"flex items-center gap-2\">\n                    <BrainCircuit className=\"h-6 w-6 text-primary\" />\n                    Verificação com IA\n                </CardTitle>\n                <CardDescription>\n                    Use nossa IA para analisar os relatos e obter um status verificado.\n                </CardDescription>\n            </CardHeader>\n            <CardContent>\n                <Button onClick={handleVerification} disabled={loading || atm.reports.length === 0} className=\"w-full\">\n                    {loading ? <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" /> : null}\n                    {atm.reports.length === 0 ? \"Sem relatórios para verificar\" : \"Verificar Status\"}\n                </Button>\n\n                {error && <p className=\"mt-4 text-sm text-destructive\">{error}</p>}\n\n                {result && (\n                     <Alert className=\"mt-4\">\n                        <StatusIcon status={result.verifiedStatus} />\n                        <AlertTitle className=\"capitalize\">\n                            Status Verificado: {result.verifiedStatus.replace('_', ' ')}\n                        </AlertTitle>\n                        <AlertDescription className=\"space-y-2\">\n                           <p>{result.reasoning}</p>\n                           <p>\n                             Confiança: <Badge variant=\"secondary\">{Math.round(result.confidenceScore * 100)}%</Badge>\n                           </p>\n                        </AlertDescription>\n                    </Alert>\n                )}\n            </CardContent>\n        </Card>\n    );\n}\n\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 490, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/atm-detail.tsx"],"sourcesContent":["import type { Atm } from '@/types';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { CheckCircle2, CircleSlash, HelpCircle, MapPin, Clock, Info, ArrowLeft } from 'lucide-react';\nimport { format } from 'date-fns';\nimport { ptBR } from 'date-fns/locale';\nimport { AtmVerificationClient } from './atm-verification-client';\nimport { Button } from './ui/button';\nimport { useRouter } from 'next/navigation';\n\ntype StatusVariant = 'default' | 'destructive' | 'secondary';\n\nconst statusMap: { [key in Atm['status']]: { text: string; variant: StatusVariant; icon: React.ReactNode } } = {\n  com_dinheiro: { text: 'Com Dinheiro', variant: 'default', icon: <CheckCircle2 className=\"h-4 w-4 text-accent\" /> },\n  sem_dinheiro: { text: 'Sem Dinheiro', variant: 'destructive', icon: <CircleSlash className=\"h-4 w-4\" /> },\n  desconhecido: { text: 'Desconhecido', variant: 'secondary', icon: <HelpCircle className=\"h-4 w-4\" /> },\n};\n\nexport function AtmDetail({ atm }: { atm: Atm }) {\n  const router = useRouter();\n  const statusInfo = statusMap[atm.status];\n\n  // Ordena os relatórios, do mais recente para o mais antigo\n  const sortedReports = [...atm.reports].sort((a, b) => new Date(b.timestamp).getTime() - new Date(a.timestamp).getTime());\n\n  return (\n    <div className=\"space-y-6\">\n        <Button variant=\"outline\" onClick={() => router.back()}>\n            <ArrowLeft className=\"mr-2 h-4 w-4\" />\n            Voltar para a Lista\n        </Button>\n        <div className=\"grid gap-8 md:grid-cols-3\">\n            <div className=\"md:col-span-2 space-y-8\">\n                <Card>\n                    <CardHeader>\n                        <CardTitle className=\"flex items-center justify-between font-headline text-3xl\">\n                            {atm.name}\n                            <Badge variant={statusInfo.variant} className=\"flex items-center gap-1 text-base\">\n                                {statusInfo.icon}\n                                {statusInfo.text}\n                            </Badge>\n                        </CardTitle>\n                        <CardDescription className=\"flex items-center gap-2 pt-2\">\n                            <MapPin className=\"h-4 w-4\" />\n                            {atm.address}\n                        </CardDescription>\n                    </CardHeader>\n                    <CardContent>\n                        <div className=\"text-sm text-muted-foreground\">\n                            <p><span className=\"text-green-500\">Última atualização: {format(new Date(atm.lastUpdate), \"dd/MM/yyyy 'às' HH:mm\", { locale: ptBR })}</span></p>\n                        </div>\n                    </CardContent>\n                </Card>\n\n                {atm.details && (\n                    <Card>\n                        <CardHeader>\n                            <CardTitle className=\"flex items-center gap-2 text-xl\">\n                            <Info className=\"h-5 w-5\" />\n                            Detalhes Adicionais\n                            </CardTitle>\n                        </CardHeader>\n                        <CardContent>\n                            <p className=\"text-muted-foreground\">{atm.details}</p>\n                        </CardContent>\n                    </Card>\n                )}\n\n                <Card>\n                    <CardHeader>\n                        <CardTitle>Histórico de Atualizações</CardTitle>\n                    </CardHeader>\n                    <CardContent>\n                        <ul className=\"space-y-4\">\n                            {sortedReports.map((report, index) => (\n                                <li key={index} className=\"flex items-center justify-between\">\n                                    <div className=\"flex items-center gap-3\">\n                                        {report.status === 'com_dinheiro' ? <CheckCircle2 className=\"h-5 w-5 text-accent\" /> : <CircleSlash className=\"h-5 w-5 text-destructive\" />}\n                                        <div>\n                                            <p className=\"font-medium\">Status: {report.status === 'com_dinheiro' ? 'Com Dinheiro' : 'Sem Dinheiro'}</p>\n                                            <p className=\"text-sm text-muted-foreground\">por {report.userName}</p>\n                                        </div>\n                                    </div>\n                                    <div className=\"text-sm text-muted-foreground flex items-center gap-2\">\n                                    <Clock className=\"h-4 w-4\" />\n                                    {format(new Date(report.timestamp), \"dd/MM 'às' HH:mm\", { locale: ptBR })}\n                                    </div>\n                                </li>\n                            ))}\n                        </ul>\n                    </CardContent>\n                </Card>\n            </div>\n\n            <div className=\"md:col-span-1\">\n                <AtmVerificationClient atm={atm} />\n            </div>\n        </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 871, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/dashboard/atm/%5Bid%5D/page.tsx"],"sourcesContent":["'use client'\nimport { AtmDetail } from '@/components/atm-detail';\nimport { notFound, useParams } from 'next/navigation';\nimport type { Atm } from '@/types';\nimport { useEffect, useState } from 'react';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport { doc, getDoc } from 'firebase/firestore';\nimport { db } from '@/firebase/init';\n\n\n// Helper to convert Firestore Timestamps to ISO strings safely\nconst convertTimestampToString = (timestamp: any): string => {\n  if (timestamp && typeof timestamp.toDate === 'function') {\n    return timestamp.toDate().toISOString();\n  }\n  if (typeof timestamp === 'string') {\n    return timestamp;\n  }\n  // Fallback for null, undefined, or other types\n  return new Date(0).toISOString();\n};\n\n\nexport default function AtmDetailPage() {\n  const params = useParams();\n  const atmId = params.id as string;\n  const [atmData, setAtmData] = useState<Atm | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    if (!atmId) return;\n\n    const fetchAtm = async () => {\n      try {\n        setLoading(true);\n        const atmRef = doc(db, 'atms', atmId);\n        const atmDoc = await getDoc(atmRef);\n\n        if (!atmDoc.exists()) {\n          notFound();\n          return;\n        }\n        \n        const data = atmDoc.data();\n        const reports = (data.reports || []).map((report: any) => ({\n            ...report,\n            timestamp: convertTimestampToString(report.timestamp),\n        }));\n\n        const atm: Atm = {\n            id: atmDoc.id,\n            name: data.name || '',\n            address: data.address || '',\n            location: data.location || { lat: 0, lng: 0 },\n            status: data.status || 'desconhecido',\n            details: data.details || '',\n            lastUpdate: convertTimestampToString(data.lastUpdate),\n            reports: reports,\n        };\n\n        setAtmData(atm);\n\n      } catch (err: any) {\n        console.error(err);\n        setError('Failed to fetch ATM data');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchAtm();\n  }, [atmId]);\n\n  if (loading) {\n    return (\n        <div className=\"grid gap-8 md:grid-cols-3\">\n            <div className=\"md:col-span-2 space-y-8\">\n                <Skeleton className=\"h-40 w-full\" />\n                <Skeleton className=\"h-64 w-full\" />\n            </div>\n            <div className=\"md:col-span-1\">\n                <Skeleton className=\"h-48 w-full\" />\n            </div>\n        </div>\n    );\n  }\n  \n  if (error) {\n      return <div className=\"text-destructive text-center\">Erro ao carregar os dados do ATM. Tente novamente mais tarde.</div>;\n  }\n\n  if (!atmData) {\n    notFound();\n  }\n\n  return <AtmDetail atm={atmData} />;\n}\n"],"names":[],"mappings":";;;;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAPA;;;;;;;;AAUA,+DAA+D;AAC/D,MAAM,2BAA2B,CAAC;IAChC,IAAI,aAAa,OAAO,UAAU,MAAM,KAAK,YAAY;QACvD,OAAO,UAAU,MAAM,GAAG,WAAW;IACvC;IACA,IAAI,OAAO,cAAc,UAAU;QACjC,OAAO;IACT;IACA,+CAA+C;IAC/C,OAAO,IAAI,KAAK,GAAG,WAAW;AAChC;AAGe,SAAS;IACtB,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,QAAQ,OAAO,EAAE;IACvB,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAc;IACnD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAElD,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,CAAC,OAAO;QAEZ,MAAM,WAAW;YACf,IAAI;gBACF,WAAW;gBACX,MAAM,SAAS,CAAA,GAAA,iKAAA,CAAA,MAAG,AAAD,EAAE,uHAAA,CAAA,KAAE,EAAE,QAAQ;gBAC/B,MAAM,SAAS,MAAM,CAAA,GAAA,iKAAA,CAAA,SAAM,AAAD,EAAE;gBAE5B,IAAI,CAAC,OAAO,MAAM,IAAI;oBACpB,CAAA,GAAA,kIAAA,CAAA,WAAQ,AAAD;oBACP;gBACF;gBAEA,MAAM,OAAO,OAAO,IAAI;gBACxB,MAAM,UAAU,CAAC,KAAK,OAAO,IAAI,EAAE,EAAE,GAAG,CAAC,CAAC,SAAgB,CAAC;wBACvD,GAAG,MAAM;wBACT,WAAW,yBAAyB,OAAO,SAAS;oBACxD,CAAC;gBAED,MAAM,MAAW;oBACb,IAAI,OAAO,EAAE;oBACb,MAAM,KAAK,IAAI,IAAI;oBACnB,SAAS,KAAK,OAAO,IAAI;oBACzB,UAAU,KAAK,QAAQ,IAAI;wBAAE,KAAK;wBAAG,KAAK;oBAAE;oBAC5C,QAAQ,KAAK,MAAM,IAAI;oBACvB,SAAS,KAAK,OAAO,IAAI;oBACzB,YAAY,yBAAyB,KAAK,UAAU;oBACpD,SAAS;gBACb;gBAEA,WAAW;YAEb,EAAE,OAAO,KAAU;gBACjB,QAAQ,KAAK,CAAC;gBACd,SAAS;YACX,SAAU;gBACR,WAAW;YACb;QACF;QAEA;IACF,GAAG;QAAC;KAAM;IAEV,IAAI,SAAS;QACX,qBACI,8OAAC;YAAI,WAAU;;8BACX,8OAAC;oBAAI,WAAU;;sCACX,8OAAC,oIAAA,CAAA,WAAQ;4BAAC,WAAU;;;;;;sCACpB,8OAAC,oIAAA,CAAA,WAAQ;4BAAC,WAAU;;;;;;;;;;;;8BAExB,8OAAC;oBAAI,WAAU;8BACX,cAAA,8OAAC,oIAAA,CAAA,WAAQ;wBAAC,WAAU;;;;;;;;;;;;;;;;;IAIlC;IAEA,IAAI,OAAO;QACP,qBAAO,8OAAC;YAAI,WAAU;sBAA+B;;;;;;IACzD;IAEA,IAAI,CAAC,SAAS;QACZ,CAAA,GAAA,kIAAA,CAAA,WAAQ,AAAD;IACT;IAEA,qBAAO,8OAAC,mIAAA,CAAA,YAAS;QAAC,KAAK;;;;;;AACzB","debugId":null}}]
}