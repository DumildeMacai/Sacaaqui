{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/firebase/admin.ts"],"sourcesContent":["\nimport * as admin from 'firebase-admin';\n\nfunction initializeAdminApp() {\n    if (admin.apps.length > 0) {\n        return admin.app();\n    }\n    try {\n        // Initialize without explicit credentials.\n        // In a managed environment like Firebase/Google Cloud,\n        // the SDK will automatically discover the credentials.\n        return admin.initializeApp();\n    } catch (error) {\n        console.error('Firebase admin initialization error', error);\n        throw new Error('Failed to initialize Firebase Admin SDK. Check server logs.');\n    }\n}\n\nconst adminApp = initializeAdminApp();\nconst adminDb = admin.firestore(adminApp);\nconst adminAuth = admin.auth(adminApp);\n\nexport { adminDb, adminAuth };\n"],"names":[],"mappings":";;;;AACA;;AAEA,SAAS;IACL,IAAI,2HAAA,CAAA,OAAU,CAAC,MAAM,GAAG,GAAG;QACvB,OAAO,CAAA,GAAA,2HAAA,CAAA,MAAS,AAAD;IACnB;IACA,IAAI;QACA,2CAA2C;QAC3C,uDAAuD;QACvD,uDAAuD;QACvD,OAAO,CAAA,GAAA,2HAAA,CAAA,gBAAmB,AAAD;IAC7B,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,uCAAuC;QACrD,MAAM,IAAI,MAAM;IACpB;AACJ;AAEA,MAAM,WAAW;AACjB,MAAM,UAAU,CAAA,GAAA,2HAAA,CAAA,YAAe,AAAD,EAAE;AAChC,MAAM,YAAY,CAAA,GAAA,2HAAA,CAAA,OAAU,AAAD,EAAE","debugId":null}},
    {"offset": {"line": 45, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/actions/get-admin-data.ts"],"sourcesContent":["\n'use server';\n\nimport { adminDb, adminAuth } from '@/firebase/admin';\nimport type { Atm } from '@/types';\nimport type { DashboardData } from '@/app/admin/(panel)/dashboard/page';\n\nasync function verifyAdmin(idToken: string | undefined): Promise<{ isAdmin: boolean; error?: string }> {\n  if (!idToken) {\n    return { isAdmin: false, error: 'No token provided' };\n  }\n  try {\n    const decodedToken = await adminAuth.verifyIdToken(idToken);\n    \n    if (decodedToken.email !== 'admin@admin.com') {\n      return { isAdmin: false, error: 'User is not admin' };\n    }\n    \n    return { isAdmin: true };\n  } catch (error: any) {\n    console.error(\"Admin verification failed:\", error);\n    return { isAdmin: false, error: error.message || 'Token verification failed' };\n  }\n}\n\nexport async function getDashboardData(idToken: string | undefined): Promise<{ data?: DashboardData; error?: string; }> {\n    const authResult = await verifyAdmin(idToken);\n    if (!authResult.isAdmin) {\n        return { error: `Acesso nÃ£o autorizado: ${authResult.error}` };\n    }\n    \n    try {\n        const atmsRef = adminDb.collection(\"atms\");\n        const usersRef = adminDb.collection(\"users\");\n\n        const [atmsSnapshot, usersSnapshot] = await Promise.all([\n            atmsRef.get(),\n            usersRef.get()\n        ]);\n\n        const atmCount = atmsSnapshot.size;\n        const userCount = usersSnapshot.size;\n\n        const statusCounts: { [key in Atm['status']]: number } = {\n            com_dinheiro: 0,\n            sem_dinheiro: 0,\n            desconhecido: 0,\n        };\n\n        atmsSnapshot.forEach(doc => {\n            const atm = doc.data() as Omit<Atm, 'id'>;\n            if (atm.status && statusCounts[atm.status] !== undefined) {\n                statusCounts[atm.status]++;\n            }\n        });\n        \n        const chartData = [\n            { name: 'Com Dinheiro', value: statusCounts.com_dinheiro, fill: \"var(--color-com_dinheiro)\" },\n            { name: 'Sem Dinheiro', value: statusCounts.sem_dinheiro, fill: \"var(--color-sem_dinheiro)\"  },\n            { name: 'Desconhecido', value: statusCounts.desconhecido, fill: \"var(--color-desconhecido)\"  },\n        ];\n\n        return { data: { atmCount, userCount, chartData } };\n    } catch (error: any) {\n        console.error(\"Error fetching dashboard data with Admin SDK:\", error);\n        return { error: `Falha ao obter dados do dashboard: ${error.message}` };\n    }\n}\n"],"names":[],"mappings":";;;;;AAGA;;;;;AAIA,eAAe,YAAY,OAA2B;IACpD,IAAI,CAAC,SAAS;QACZ,OAAO;YAAE,SAAS;YAAO,OAAO;QAAoB;IACtD;IACA,IAAI;QACF,MAAM,eAAe,MAAM,wHAAA,CAAA,YAAS,CAAC,aAAa,CAAC;QAEnD,IAAI,aAAa,KAAK,KAAK,mBAAmB;YAC5C,OAAO;gBAAE,SAAS;gBAAO,OAAO;YAAoB;QACtD;QAEA,OAAO;YAAE,SAAS;QAAK;IACzB,EAAE,OAAO,OAAY;QACnB,QAAQ,KAAK,CAAC,8BAA8B;QAC5C,OAAO;YAAE,SAAS;YAAO,OAAO,MAAM,OAAO,IAAI;QAA4B;IAC/E;AACF;AAEO,eAAe,iBAAiB,OAA2B;IAC9D,MAAM,aAAa,MAAM,YAAY;IACrC,IAAI,CAAC,WAAW,OAAO,EAAE;QACrB,OAAO;YAAE,OAAO,CAAC,uBAAuB,EAAE,WAAW,KAAK,EAAE;QAAC;IACjE;IAEA,IAAI;QACA,MAAM,UAAU,wHAAA,CAAA,UAAO,CAAC,UAAU,CAAC;QACnC,MAAM,WAAW,wHAAA,CAAA,UAAO,CAAC,UAAU,CAAC;QAEpC,MAAM,CAAC,cAAc,cAAc,GAAG,MAAM,QAAQ,GAAG,CAAC;YACpD,QAAQ,GAAG;YACX,SAAS,GAAG;SACf;QAED,MAAM,WAAW,aAAa,IAAI;QAClC,MAAM,YAAY,cAAc,IAAI;QAEpC,MAAM,eAAmD;YACrD,cAAc;YACd,cAAc;YACd,cAAc;QAClB;QAEA,aAAa,OAAO,CAAC,CAAA;YACjB,MAAM,MAAM,IAAI,IAAI;YACpB,IAAI,IAAI,MAAM,IAAI,YAAY,CAAC,IAAI,MAAM,CAAC,KAAK,WAAW;gBACtD,YAAY,CAAC,IAAI,MAAM,CAAC;YAC5B;QACJ;QAEA,MAAM,YAAY;YACd;gBAAE,MAAM;gBAAgB,OAAO,aAAa,YAAY;gBAAE,MAAM;YAA4B;YAC5F;gBAAE,MAAM;gBAAgB,OAAO,aAAa,YAAY;gBAAE,MAAM;YAA6B;YAC7F;gBAAE,MAAM;gBAAgB,OAAO,aAAa,YAAY;gBAAE,MAAM;YAA6B;SAChG;QAED,OAAO;YAAE,MAAM;gBAAE;gBAAU;gBAAW;YAAU;QAAE;IACtD,EAAE,OAAO,OAAY;QACjB,QAAQ,KAAK,CAAC,iDAAiD;QAC/D,OAAO;YAAE,OAAO,CAAC,mCAAmC,EAAE,MAAM,OAAO,EAAE;QAAC;IAC1E;AACJ;;;IA1CsB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 150, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/admin/%28panel%29/dashboard/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {getDashboardData as '4040cfe520810cccf3faf1b4221396e17c97dd38ce'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 214, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/%28panel%29/dashboard/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/admin/(panel)/dashboard/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/admin/(panel)/dashboard/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA4S,GACzU,0EACA","debugId":null}},
    {"offset": {"line": 228, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/%28panel%29/dashboard/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/admin/(panel)/dashboard/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/admin/(panel)/dashboard/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAwR,GACrT,sDACA","debugId":null}},
    {"offset": {"line": 242, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}