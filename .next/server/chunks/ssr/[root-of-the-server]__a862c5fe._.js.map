{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 62, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/firebase/adminInit.ts"],"sourcesContent":["\nimport * as admin from 'firebase-admin';\nimport { config } from 'dotenv';\nimport { expand } from 'dotenv-expand';\n\nlet db: admin.firestore.Firestore;\n\nfunction initializeAdmin() {\n    if (admin.apps.length > 0) {\n        console.log(\"Firebase Admin SDK já inicializado.\");\n        db = admin.firestore();\n        return;\n    }\n\n    const myEnv = config();\n    expand(myEnv);\n\n    console.log(\"Tentando inicializar o Firebase Admin SDK...\");\n\n    try {\n        const serviceAccount = {\n            projectId: process.env.FIREBASE_PROJECT_ID,\n            privateKey: process.env.FIREBASE_ADMIN_PRIVATE_KEY?.replace(/\\\\n/g, '\\n'),\n            clientEmail: process.env.FIREBASE_CLIENT_EMAIL,\n        };\n\n        if (!serviceAccount.projectId || !serviceAccount.privateKey || !serviceAccount.clientEmail) {\n            throw new Error(\"As credenciais de serviço do Firebase Admin não estão completas. Verifique as variáveis de ambiente.\");\n        }\n\n        admin.initializeApp({\n            credential: admin.credential.cert(serviceAccount),\n            databaseURL: `https://${process.env.FIREBASE_PROJECT_ID}.firebaseio.com`\n        });\n        \n        console.log(\"Firebase Admin SDK inicializado com sucesso!\");\n        db = admin.firestore();\n\n    } catch (error) {\n        console.error(\"Erro ao inicializar o Firebase Admin SDK:\", error);\n        // Em um ambiente de produção real, você pode querer lidar com este erro de forma mais robusta.\n    }\n}\n\ninitializeAdmin();\n\nexport function getAdminDb() {\n  if (!db) {\n    throw new Error(\"O Firestore Admin não está disponível. A inicialização do Admin SDK pode ter falhado.\");\n  }\n  return db;\n}\n"],"names":[],"mappings":";;;AACA;AACA;AACA;;;;AAEA,IAAI;AAEJ,SAAS;IACL,IAAI,2HAAA,CAAA,OAAU,CAAC,MAAM,GAAG,GAAG;QACvB,QAAQ,GAAG,CAAC;QACZ,KAAK,CAAA,GAAA,2HAAA,CAAA,YAAe,AAAD;QACnB;IACJ;IAEA,MAAM,QAAQ,CAAA,GAAA,qIAAA,CAAA,SAAM,AAAD;IACnB,CAAA,GAAA,+IAAA,CAAA,SAAM,AAAD,EAAE;IAEP,QAAQ,GAAG,CAAC;IAEZ,IAAI;QACA,MAAM,iBAAiB;YACnB,WAAW,QAAQ,GAAG,CAAC,mBAAmB;YAC1C,YAAY,QAAQ,GAAG,CAAC,0BAA0B,EAAE,QAAQ,QAAQ;YACpE,aAAa,QAAQ,GAAG,CAAC,qBAAqB;QAClD;QAEA,IAAI,CAAC,eAAe,SAAS,IAAI,CAAC,eAAe,UAAU,IAAI,CAAC,eAAe,WAAW,EAAE;YACxF,MAAM,IAAI,MAAM;QACpB;QAEA,CAAA,GAAA,2HAAA,CAAA,gBAAmB,AAAD,EAAE;YAChB,YAAY,2HAAA,CAAA,aAAgB,CAAC,IAAI,CAAC;YAClC,aAAa,CAAC,QAAQ,EAAE,QAAQ,GAAG,CAAC,mBAAmB,CAAC,eAAe,CAAC;QAC5E;QAEA,QAAQ,GAAG,CAAC;QACZ,KAAK,CAAA,GAAA,2HAAA,CAAA,YAAe,AAAD;IAEvB,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,6CAA6C;IAC3D,+FAA+F;IACnG;AACJ;AAEA;AAEO,SAAS;IACd,IAAI,CAAC,IAAI;QACP,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 194, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/atm-list.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const AtmList = registerClientReference(\n    function() { throw new Error(\"Attempted to call AtmList() from the server but AtmList is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/atm-list.tsx <module evaluation>\",\n    \"AtmList\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,UAAU,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACzC;IAAa,MAAM,IAAI,MAAM;AAA8N,GAC3P,6DACA","debugId":null}},
    {"offset": {"line": 208, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/atm-list.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const AtmList = registerClientReference(\n    function() { throw new Error(\"Attempted to call AtmList() from the server but AtmList is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/atm-list.tsx\",\n    \"AtmList\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,UAAU,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACzC;IAAa,MAAM,IAAI,MAAM;AAA8N,GAC3P,yCACA","debugId":null}},
    {"offset": {"line": 222, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 232, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/logout-button.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const LogoutButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call LogoutButton() from the server but LogoutButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/logout-button.tsx <module evaluation>\",\n    \"LogoutButton\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,kEACA","debugId":null}},
    {"offset": {"line": 246, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/logout-button.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const LogoutButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call LogoutButton() from the server but LogoutButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/logout-button.tsx\",\n    \"LogoutButton\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,8CACA","debugId":null}},
    {"offset": {"line": 260, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 270, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/dashboard/page.tsx"],"sourcesContent":["import { getAdminDb } from '@/firebase/adminInit'; \nimport { collection, getDocs } from 'firebase/firestore'; \nimport type { Atm } from '@/types'; \nimport { AtmList } from '@/components/atm-list';\nimport { LogoutButton } from '@/components/logout-button';\nimport { Suspense } from 'react';\n\nasync function getAtms(): Promise<Atm[]> {\n  try {\n    const adminDb = getAdminDb(); \n    const querySnapshot = await getDocs(collection(adminDb, 'atms'));\n    const atmsList: Atm[] = querySnapshot.docs.map(doc => {\n      const data = doc.data() as Omit<Atm, 'id'>;\n      if (data.lastUpdate && typeof data.lastUpdate !== 'string' && typeof (data.lastUpdate as any).toDate === 'function') {\n        data.lastUpdate = (data.lastUpdate as any).toDate().toISOString();\n      }\n      return { ...data, id: doc.id } as Atm; \n    });\n    console.log('ATMs carregados do Firestore no servidor.');\n    return atmsList;\n  } catch (error) {\n    console.error('Erro ao carregar ATMs do Firestore no servidor:', error);\n    return []; \n  }\n}\n\nexport default async function DashboardPage() { \n  const atms = await getAtms();\n\n return (\n    <div className=\"min-h-screen p-8\"> \n      <div className=\"flex justify-between items-center mb-8\"> \n        <div className=\"mb-8\"> \n          <h1 className=\"text-3xl font-bold tracking-tight font-headline\">ATMs Próximos</h1>\n          <p className=\"text-muted-foreground\">Veja o status dos caixas e ajude a comunidade.</p> \n        </div>\n        <LogoutButton /> \n      </div>\n      <Suspense fallback={<div>Carregando...</div>}>\n        <AtmList initialAtms={atms} />\n      </Suspense>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AAAA;AAEA;AACA;AACA;;;;;;;AAEA,eAAe;IACb,IAAI;QACF,MAAM,UAAU,CAAA,GAAA,4HAAA,CAAA,aAAU,AAAD;QACzB,MAAM,gBAAgB,MAAM,CAAA,GAAA,iKAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,iKAAA,CAAA,aAAU,AAAD,EAAE,SAAS;QACxD,MAAM,WAAkB,cAAc,IAAI,CAAC,GAAG,CAAC,CAAA;YAC7C,MAAM,OAAO,IAAI,IAAI;YACrB,IAAI,KAAK,UAAU,IAAI,OAAO,KAAK,UAAU,KAAK,YAAY,OAAO,AAAC,KAAK,UAAU,CAAS,MAAM,KAAK,YAAY;gBACnH,KAAK,UAAU,GAAG,AAAC,KAAK,UAAU,CAAS,MAAM,GAAG,WAAW;YACjE;YACA,OAAO;gBAAE,GAAG,IAAI;gBAAE,IAAI,IAAI,EAAE;YAAC;QAC/B;QACA,QAAQ,GAAG,CAAC;QACZ,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,mDAAmD;QACjE,OAAO,EAAE;IACX;AACF;AAEe,eAAe;IAC5B,MAAM,OAAO,MAAM;IAEpB,qBACG,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAG,WAAU;0CAAkD;;;;;;0CAChE,8OAAC;gCAAE,WAAU;0CAAwB;;;;;;;;;;;;kCAEvC,8OAAC,sIAAA,CAAA,eAAY;;;;;;;;;;;0BAEf,8OAAC,qMAAA,CAAA,WAAQ;gBAAC,wBAAU,8OAAC;8BAAI;;;;;;0BACvB,cAAA,8OAAC,iIAAA,CAAA,UAAO;oBAAC,aAAa;;;;;;;;;;;;;;;;;AAI9B","debugId":null}}]
}