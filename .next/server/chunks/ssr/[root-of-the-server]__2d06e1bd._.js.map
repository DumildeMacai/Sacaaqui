{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/firebase/init.ts"],"sourcesContent":["// src/firebase/init.ts\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth } from \"firebase/auth\";\nimport { getFirestore } from \"firebase/firestore\";\n\nconst firebaseConfig = {\n  projectId: \"atm-locator-nbjla\",\n  appId: \"1:717294013912:web:8efc3fc8530e0920c6b6ad\",\n  storageBucket: \"atm-locator-nbjla.firebasestorage.app\",\n  apiKey: \"AIzaSyAEC8Imf55z2TcJBLh4k01tN4ZEYA4a8S4\",\n  authDomain: \"atm-locator-nbjla.firebaseapp.com\",\n  messagingSenderId: \"717294013912\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n\n// Initialize services\nconst auth = getAuth(app);\nconst db = getFirestore(app);\n\nexport { auth, db };\n"],"names":[],"mappings":"AAAA,uBAAuB;;;;;AACvB;AAAA;AACA;AAAA;AACA;AAAA;;;;AAEA,MAAM,iBAAiB;IACrB,WAAW;IACX,OAAO;IACP,eAAe;IACf,QAAQ;IACR,YAAY;IACZ,mBAAmB;AACrB;AAEA,sBAAsB;AACtB,MAAM,MAAM,CAAA,GAAA,oLAAA,CAAA,gBAAa,AAAD,EAAE;AAE1B,sBAAsB;AACtB,MAAM,OAAO,CAAA,GAAA,yOAAA,CAAA,UAAO,AAAD,EAAE;AACrB,MAAM,KAAK,CAAA,GAAA,iKAAA,CAAA,eAAY,AAAD,EAAE","debugId":null}},
    {"offset": {"line": 145, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/actions/suggest-atm.ts"],"sourcesContent":["\n'use server';\n\nimport { z } from 'zod';\nimport { auth, db } from '@/firebase/init';\nimport { collection, addDoc, serverTimestamp, doc, getDoc } from 'firebase/firestore';\nimport { User } from '@/types';\nimport { getAuth } from 'firebase/auth';\n\nconst suggestionSchema = z.object({\n    name: z.string().min(1),\n    address: z.string().min(1),\n    details: z.string().optional(),\n    userId: z.string(),\n    userName: z.string(),\n});\n\nexport type AtmSuggestionInput = z.infer<typeof suggestionSchema>;\n\nexport async function submitAtmSuggestion(input: AtmSuggestionInput): Promise<{ id: string }> {\n\n    const parsedInput = suggestionSchema.safeParse(input);\n    if (!parsedInput.success) {\n        throw new Error('Dados inválidos.');\n    }\n\n    const { name, address, details, userId, userName } = parsedInput.data;\n\n    const newSuggestion = {\n        name,\n        address,\n        details,\n        userId,\n        userName,\n        status: 'pending', // pending, approved, rejected\n        createdAt: serverTimestamp(),\n    };\n\n    try {\n        const docRef = await addDoc(collection(db, 'atm_suggestions'), newSuggestion);\n        return { id: docRef.id };\n    } catch (error) {\n        console.error('Error adding ATM suggestion:', error);\n        throw new Error('Falha ao guardar a sugestão no servidor.');\n    }\n}\n"],"names":[],"mappings":";;;;;AAGA;AACA;AACA;AAAA;;;;;;;AAIA,MAAM,mBAAmB,kKAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC9B,MAAM,kKAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC;IACrB,SAAS,kKAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC;IACxB,SAAS,kKAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;IAC5B,QAAQ,kKAAA,CAAA,IAAC,CAAC,MAAM;IAChB,UAAU,kKAAA,CAAA,IAAC,CAAC,MAAM;AACtB;AAIO,eAAe,oBAAoB,KAAyB;IAE/D,MAAM,cAAc,iBAAiB,SAAS,CAAC;IAC/C,IAAI,CAAC,YAAY,OAAO,EAAE;QACtB,MAAM,IAAI,MAAM;IACpB;IAEA,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,GAAG,YAAY,IAAI;IAErE,MAAM,gBAAgB;QAClB;QACA;QACA;QACA;QACA;QACA,QAAQ;QACR,WAAW,CAAA,GAAA,iKAAA,CAAA,kBAAe,AAAD;IAC7B;IAEA,IAAI;QACA,MAAM,SAAS,MAAM,CAAA,GAAA,iKAAA,CAAA,SAAM,AAAD,EAAE,CAAA,GAAA,iKAAA,CAAA,aAAU,AAAD,EAAE,uHAAA,CAAA,KAAE,EAAE,oBAAoB;QAC/D,OAAO;YAAE,IAAI,OAAO,EAAE;QAAC;IAC3B,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,gCAAgC;QAC9C,MAAM,IAAI,MAAM;IACpB;AACJ;;;IA1BsB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 203, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/dashboard/suggest-atm/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {submitAtmSuggestion as '40473c62fca2189f5faadb066ee7a02ddf1c569fbf'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 261, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/dashboard/suggest-atm/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/dashboard/suggest-atm/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/dashboard/suggest-atm/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA0S,GACvU,wEACA","debugId":null}},
    {"offset": {"line": 275, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/dashboard/suggest-atm/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/dashboard/suggest-atm/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/dashboard/suggest-atm/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAsR,GACnT,oDACA","debugId":null}},
    {"offset": {"line": 289, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}