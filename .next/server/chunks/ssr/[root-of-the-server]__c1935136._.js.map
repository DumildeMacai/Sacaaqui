{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/firebase/init.ts"],"sourcesContent":["// src/firebase/init.ts\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth } from \"firebase/auth\";\nimport { getFirestore } from \"firebase/firestore\";\n\nconst firebaseConfig = {\n  projectId: \"atm-locator-nbjla\",\n  appId: \"1:717294013912:web:8efc3fc8530e0920c6b6ad\",\n  storageBucket: \"atm-locator-nbjla.firebasestorage.app\",\n  apiKey: \"AIzaSyAEC8Imf55z2TcJBLh4k01tN4ZEYA4a8S4\",\n  authDomain: \"atm-locator-nbjla.firebaseapp.com\",\n  messagingSenderId: \"717294013912\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n\n// Initialize services\nconst auth = getAuth(app);\nconst db = getFirestore(app);\n\nexport { auth, db };\n"],"names":[],"mappings":"AAAA,uBAAuB;;;;;AACvB;AAAA;AACA;AAAA;AACA;AAAA;;;;AAEA,MAAM,iBAAiB;IACrB,WAAW;IACX,OAAO;IACP,eAAe;IACf,QAAQ;IACR,YAAY;IACZ,mBAAmB;AACrB;AAEA,sBAAsB;AACtB,MAAM,MAAM,CAAA,GAAA,oLAAA,CAAA,gBAAa,AAAD,EAAE;AAE1B,sBAAsB;AACtB,MAAM,OAAO,CAAA,GAAA,yOAAA,CAAA,UAAO,AAAD,EAAE;AACrB,MAAM,KAAK,CAAA,GAAA,iKAAA,CAAA,eAAY,AAAD,EAAE","debugId":null}},
    {"offset": {"line": 145, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/actions/manage-suggestion.ts"],"sourcesContent":["\n'use server';\n\nimport { db } from \"@/firebase/init\";\nimport { addDoc, collection, doc, updateDoc, serverTimestamp } from \"firebase/firestore\";\nimport { revalidatePath } from \"next/cache\";\n\ninterface ApproveSuggestionInput {\n    suggestionId: string;\n    userId: string;\n    name: string;\n    address: string;\n    lat: number;\n    lng: number;\n    details?: string;\n}\n\nexport async function handleApproveSuggestion(input: ApproveSuggestionInput) {\n    if (!input.name || !input.address || isNaN(input.lat) || isNaN(input.lng)) {\n        return { success: false, error: \"Nome, endereço, latitude e longitude válidos são obrigatórios.\" };\n    }\n\n    try {\n        const newAtmPayload = {\n            name: input.name,\n            address: input.address,\n            location: {\n                lat: input.lat, \n                lng: input.lng,\n            },\n            details: input.details || '',\n            status: 'desconhecido',\n            lastUpdate: serverTimestamp(),\n            reports: [],\n        };\n        await addDoc(collection(db, 'atms'), newAtmPayload);\n\n        const suggestionRef = doc(db, 'atm_suggestions', input.suggestionId);\n        await updateDoc(suggestionRef, {\n            status: 'approved'\n        });\n\n        if (input.userId) {\n            await addDoc(collection(db, 'notifications'), {\n                userId: input.userId,\n                title: 'Sugestão Aprovada!',\n                message: `O ATM \"${input.name}\" que você sugeriu foi aprovado e adicionado ao mapa. Obrigado por sua contribuição!`,\n                read: false,\n                createdAt: serverTimestamp(),\n                type: 'suggestion_approved'\n            });\n        }\n\n        revalidatePath('/admin/suggestions');\n        revalidatePath('/dashboard');\n\n        return { success: true };\n\n    } catch (error) {\n        console.error(\"Error approving suggestion:\", error);\n        const errorMessage = error instanceof Error ? error.message : \"Ocorreu um erro desconhecido\";\n        return { success: false, error: `Falha ao aprovar a sugestão: ${errorMessage}` };\n    }\n}\n\n\ninterface RejectSuggestionInput {\n    suggestionId: string;\n    suggestionName: string;\n    userId: string;\n}\n\nexport async function handleRejectSuggestion(input: RejectSuggestionInput) {\n    try {\n        const suggestionRef = doc(db, 'atm_suggestions', input.suggestionId);\n        await updateDoc(suggestionRef, {\n            status: 'rejected'\n        });\n\n        if (input.userId) {\n            await addDoc(collection(db, 'notifications'), {\n                userId: input.userId,\n                title: 'Sugestão Rejeitada',\n                message: `A sua sugestão para o ATM \"${input.suggestionName}\" foi revista mas não pôde ser aprovada neste momento.`,\n                read: false,\n                createdAt: serverTimestamp(),\n                type: 'suggestion_rejected'\n            });\n        }\n\n        revalidatePath('/admin/suggestions');\n\n        return { success: true };\n    } catch (error) {\n        console.error(\"Error rejecting suggestion:\", error);\n        const errorMessage = error instanceof Error ? error.message : \"Ocorreu um erro desconhecido\";\n        return { success: false, error: `Falha ao rejeitar a sugestão: ${errorMessage}` };\n    }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 252, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/actions/geocode-address.ts"],"sourcesContent":["\n'use server';\n\ninterface GeocodeResult {\n    success: boolean;\n    lat?: number;\n    lng?: number;\n    error?: string;\n}\n\nexport async function geocodeAddressAction(address: string): Promise<GeocodeResult> {\n    const apiKey = process.env.NEXT_PUBLIC_GOOGLE_MAPS_API_KEY;\n\n    if (!apiKey) {\n        console.error(\"Google Maps API key is not configured.\");\n        return { success: false, error: 'A chave da API do Google Maps não está configurada no servidor.' };\n    }\n\n    const url = `https://maps.googleapis.com/maps/api/geocode/json?address=${encodeURIComponent(address)}&key=${apiKey}`;\n\n    try {\n        const response = await fetch(url);\n        const data = await response.json();\n\n        if (data.status === 'OK') {\n            const location = data.results[0].geometry.location;\n            return {\n                success: true,\n                lat: location.lat,\n                lng: location.lng,\n            };\n        } else {\n            console.error('Geocoding API Error:', data.status, data.error_message);\n            let errorMessage = `Falha ao geocodificar o endereço. Status: ${data.status}.`;\n            if (data.error_message) {\n                 errorMessage += ` Detalhes: ${data.error_message}`;\n            }\n            return { success: false, error: errorMessage };\n        }\n    } catch (error) {\n        console.error('Error fetching from Geocoding API:', error);\n        return { success: false, error: 'Ocorreu um erro de rede ao tentar contatar a API de Geocodificação.' };\n    }\n}\n"],"names":[],"mappings":";;;;;;;;AAUO,eAAe,qBAAqB,OAAe;IACtD,MAAM,SAAS,QAAQ,GAAG,CAAC,+BAA+B;IAE1D,IAAI,CAAC,QAAQ;QACT,QAAQ,KAAK,CAAC;QACd,OAAO;YAAE,SAAS;YAAO,OAAO;QAAkE;IACtG;IAEA,MAAM,MAAM,CAAC,0DAA0D,EAAE,mBAAmB,SAAS,KAAK,EAAE,QAAQ;IAEpH,IAAI;QACA,MAAM,WAAW,MAAM,MAAM;QAC7B,MAAM,OAAO,MAAM,SAAS,IAAI;QAEhC,IAAI,KAAK,MAAM,KAAK,MAAM;YACtB,MAAM,WAAW,KAAK,OAAO,CAAC,EAAE,CAAC,QAAQ,CAAC,QAAQ;YAClD,OAAO;gBACH,SAAS;gBACT,KAAK,SAAS,GAAG;gBACjB,KAAK,SAAS,GAAG;YACrB;QACJ,OAAO;YACH,QAAQ,KAAK,CAAC,wBAAwB,KAAK,MAAM,EAAE,KAAK,aAAa;YACrE,IAAI,eAAe,CAAC,0CAA0C,EAAE,KAAK,MAAM,CAAC,CAAC,CAAC;YAC9E,IAAI,KAAK,aAAa,EAAE;gBACnB,gBAAgB,CAAC,WAAW,EAAE,KAAK,aAAa,EAAE;YACvD;YACA,OAAO;gBAAE,SAAS;gBAAO,OAAO;YAAa;QACjD;IACJ,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,sCAAsC;QACpD,OAAO;YAAE,SAAS;YAAO,OAAO;QAAsE;IAC1G;AACJ;;;IAjCsB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 310, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/admin/%28panel%29/suggestions/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {handleApproveSuggestion as '408cbc0cba845c177411416c89f0ebf240f0dbfabd'} from 'ACTIONS_MODULE0'\nexport {handleRejectSuggestion as '40bd35e0421fcdfe86e5e3d617a874443e7a41d37f'} from 'ACTIONS_MODULE0'\nexport {geocodeAddressAction as '40a120578ee9bf31fe37699d6fb9705ec561252117'} from 'ACTIONS_MODULE1'\n"],"names":[],"mappings":";AAAA;AAEA","debugId":null}},
    {"offset": {"line": 383, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/%28panel%29/suggestions/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/admin/(panel)/suggestions/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/admin/(panel)/suggestions/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA8S,GAC3U,4EACA","debugId":null}},
    {"offset": {"line": 397, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/%28panel%29/suggestions/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/admin/(panel)/suggestions/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/admin/(panel)/suggestions/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA0R,GACvT,wDACA","debugId":null}},
    {"offset": {"line": 411, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}