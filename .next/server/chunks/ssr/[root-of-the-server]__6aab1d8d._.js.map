{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/firebase/init.ts"],"sourcesContent":["// src/firebase/init.ts\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth } from \"firebase/auth\";\nimport { getFirestore } from \"firebase/firestore\";\n\nconst firebaseConfig = {\n  projectId: \"atm-locator-nbjla\",\n  appId: \"1:717294013912:web:8efc3fc8530e0920c6b6ad\",\n  storageBucket: \"atm-locator-nbjla.firebasestorage.app\",\n  apiKey: \"AIzaSyAEC8Imf55z2TcJBLh4k01tN4ZEYA4a8S4\",\n  authDomain: \"atm-locator-nbjla.firebaseapp.com\",\n  messagingSenderId: \"717294013912\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n\n// Initialize services\nconst auth = getAuth(app);\nconst db = getFirestore(app);\n\nexport { auth, db };\n"],"names":[],"mappings":"AAAA,uBAAuB;;;;;AACvB;AAAA;AACA;AAAA;AACA;AAAA;;;;AAEA,MAAM,iBAAiB;IACrB,WAAW;IACX,OAAO;IACP,eAAe;IACf,QAAQ;IACR,YAAY;IACZ,mBAAmB;AACrB;AAEA,sBAAsB;AACtB,MAAM,MAAM,CAAA,GAAA,oLAAA,CAAA,gBAAa,AAAD,EAAE;AAE1B,sBAAsB;AACtB,MAAM,OAAO,CAAA,GAAA,yOAAA,CAAA,UAAO,AAAD,EAAE;AACrB,MAAM,KAAK,CAAA,GAAA,iKAAA,CAAA,eAAY,AAAD,EAAE","debugId":null}},
    {"offset": {"line": 145, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/actions/get-dashboard-data.ts"],"sourcesContent":["\n'use server';\n\nimport { db } from \"@/firebase/init\";\nimport { collection, getDocs } from \"firebase/firestore\";\nimport type { Atm, User } from \"@/types\";\n\nexport interface DashboardData {\n    atmCount: number;\n    userCount: number;\n    chartData: {\n        name: string;\n        value: number;\n        fill: string;\n    }[];\n}\n\nexport async function getDashboardData(): Promise<DashboardData> {\n    try {\n        const atmsQuery = collection(db, \"atms\");\n        const usersQuery = collection(db, \"users\");\n\n        const [atmsSnapshot, usersSnapshot] = await Promise.all([\n            getDocs(atmsQuery),\n            getDocs(usersQuery)\n        ]);\n\n        // ATM Data\n        const atmCount = atmsSnapshot.size;\n        \n        const statusCounts: { [key in Atm['status']]: number } = {\n            com_dinheiro: 0,\n            sem_dinheiro: 0,\n            desconhecido: 0,\n        };\n\n        atmsSnapshot.forEach(doc => {\n            const atm = doc.data() as Omit<Atm, 'id'>;\n            if (statusCounts[atm.status] !== undefined) {\n                statusCounts[atm.status]++;\n            }\n        });\n\n        const chartData = [\n            { name: 'Com Dinheiro', value: statusCounts.com_dinheiro, fill: \"var(--color-com_dinheiro)\" },\n            { name: 'Sem Dinheiro', value: statusCounts.sem_dinheiro, fill: \"var(--color-sem_dinheiro)\"  },\n            { name: 'Desconhecido', value: statusCounts.desconhecido, fill: \"var(--color-desconhecido)\"  },\n        ];\n\n        // User Data\n        const userCount = usersSnapshot.size;\n\n        return {\n            atmCount,\n            userCount,\n            chartData,\n        };\n\n    } catch (error) {\n        console.error(\"Error fetching dashboard data via server action:\", error);\n        throw new Error('Failed to fetch dashboard data. Check server logs and Firestore permissions.');\n    }\n}\n"],"names":[],"mappings":";;;;;AAGA;AACA;AAAA;;;;;;AAaO,eAAe;IAClB,IAAI;QACA,MAAM,YAAY,CAAA,GAAA,iKAAA,CAAA,aAAU,AAAD,EAAE,uHAAA,CAAA,KAAE,EAAE;QACjC,MAAM,aAAa,CAAA,GAAA,iKAAA,CAAA,aAAU,AAAD,EAAE,uHAAA,CAAA,KAAE,EAAE;QAElC,MAAM,CAAC,cAAc,cAAc,GAAG,MAAM,QAAQ,GAAG,CAAC;YACpD,CAAA,GAAA,iKAAA,CAAA,UAAO,AAAD,EAAE;YACR,CAAA,GAAA,iKAAA,CAAA,UAAO,AAAD,EAAE;SACX;QAED,WAAW;QACX,MAAM,WAAW,aAAa,IAAI;QAElC,MAAM,eAAmD;YACrD,cAAc;YACd,cAAc;YACd,cAAc;QAClB;QAEA,aAAa,OAAO,CAAC,CAAA;YACjB,MAAM,MAAM,IAAI,IAAI;YACpB,IAAI,YAAY,CAAC,IAAI,MAAM,CAAC,KAAK,WAAW;gBACxC,YAAY,CAAC,IAAI,MAAM,CAAC;YAC5B;QACJ;QAEA,MAAM,YAAY;YACd;gBAAE,MAAM;gBAAgB,OAAO,aAAa,YAAY;gBAAE,MAAM;YAA4B;YAC5F;gBAAE,MAAM;gBAAgB,OAAO,aAAa,YAAY;gBAAE,MAAM;YAA6B;YAC7F;gBAAE,MAAM;gBAAgB,OAAO,aAAa,YAAY;gBAAE,MAAM;YAA6B;SAChG;QAED,YAAY;QACZ,MAAM,YAAY,cAAc,IAAI;QAEpC,OAAO;YACH;YACA;YACA;QACJ;IAEJ,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,oDAAoD;QAClE,MAAM,IAAI,MAAM;IACpB;AACJ;;;IA7CsB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 219, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/admin/%28panel%29/dashboard/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {getDashboardData as '00879f9357d3b42e2666da171427705e594fa57d78'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 283, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/%28panel%29/dashboard/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/admin/(panel)/dashboard/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/admin/(panel)/dashboard/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA4S,GACzU,0EACA","debugId":null}},
    {"offset": {"line": 297, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/%28panel%29/dashboard/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/admin/(panel)/dashboard/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/admin/(panel)/dashboard/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAwR,GACrT,sDACA","debugId":null}},
    {"offset": {"line": 311, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}