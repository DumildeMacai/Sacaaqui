{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 27, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/%28panel%29/dashboard/page.tsx"],"sourcesContent":["\"use server\";\n\nimport { getFirestore } from \"firebase-admin/firestore\";\nimport { initializeApp, getApps, cert } from \"firebase-admin/app\";\n\nif (!getApps().length) {\n  initializeApp({\n    credential: cert({\n      projectId: process.env.FIREBASE_PROJECT_ID,\n      clientEmail: process.env.FIREBASE_CLIENT_EMAIL,\n      privateKey: process.env.FIREBASE_PRIVATE_KEY?.replace(/\\\\n/g, \"\\n\"),\n    }),\n  });\n}\n\nconst db = getFirestore();\n\nexport type DashboardData = {\n  atmCount: number;\n  userCount: number;\n  chartData: { status: string; value: number }[];\n};\n\nexport async function getDashboardData(): Promise<DashboardData> {\n  try {\n    // ---- Conta ATMs ----\n    const atmSnapshot = await db.collection(\"atms\").get();\n    const atmCount = atmSnapshot.size;\n\n    // ---- Conta usuários ----\n    const userSnapshot = await db.collection(\"users\").get();\n    const userCount = userSnapshot.size;\n\n    // ---- Distribuição de status dos ATMs ----\n    const statusCounts: Record<string, number> = {};\n    atmSnapshot.docs.forEach((doc) => {\n      const data = doc.data();\n      const status = data.status || \"desconhecido\";\n      statusCounts[status] = (statusCounts[status] || 0) + 1;\n    });\n\n    const chartData = Object.entries(statusCounts).map(([status, value]) => ({\n      status,\n      value,\n    }));\n\n    return { atmCount, userCount, chartData };\n  } catch (err) {\n    console.error(\"Erro no getDashboardData:\", err);\n    throw new Error(\"Erro ao carregar dados do dashboard\");\n  }\n}\n"],"names":[],"mappings":";;;;;AAEA;AACA;;;;;;;;;;;AAEA,IAAI,CAAC,CAAA,GAAA,gJAAA,CAAA,UAAO,AAAD,IAAI,MAAM,EAAE;IACrB,CAAA,GAAA,gJAAA,CAAA,gBAAa,AAAD,EAAE;QACZ,YAAY,CAAA,GAAA,gJAAA,CAAA,OAAI,AAAD,EAAE;YACf,WAAW,QAAQ,GAAG,CAAC,mBAAmB;YAC1C,aAAa,QAAQ,GAAG,CAAC,qBAAqB;YAC9C,YAAY,QAAQ,GAAG,CAAC,oBAAoB,EAAE,QAAQ,QAAQ;QAChE;IACF;AACF;AAEA,MAAM,KAAK,CAAA,GAAA,4JAAA,CAAA,eAAY,AAAD;AAQf,eAAe;IACpB,IAAI;QACF,uBAAuB;QACvB,MAAM,cAAc,MAAM,GAAG,UAAU,CAAC,QAAQ,GAAG;QACnD,MAAM,WAAW,YAAY,IAAI;QAEjC,2BAA2B;QAC3B,MAAM,eAAe,MAAM,GAAG,UAAU,CAAC,SAAS,GAAG;QACrD,MAAM,YAAY,aAAa,IAAI;QAEnC,4CAA4C;QAC5C,MAAM,eAAuC,CAAC;QAC9C,YAAY,IAAI,CAAC,OAAO,CAAC,CAAC;YACxB,MAAM,OAAO,IAAI,IAAI;YACrB,MAAM,SAAS,KAAK,MAAM,IAAI;YAC9B,YAAY,CAAC,OAAO,GAAG,CAAC,YAAY,CAAC,OAAO,IAAI,CAAC,IAAI;QACvD;QAEA,MAAM,YAAY,OAAO,OAAO,CAAC,cAAc,GAAG,CAAC,CAAC,CAAC,QAAQ,MAAM,GAAK,CAAC;gBACvE;gBACA;YACF,CAAC;QAED,OAAO;YAAE;YAAU;YAAW;QAAU;IAC1C,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC,6BAA6B;QAC3C,MAAM,IAAI,MAAM;IAClB;AACF;;;IA5BsB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 95, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/admin/%28panel%29/dashboard/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {getDashboardData as '0040e9c51025390309dfb7bf930aaf065c638ff4cf'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}}]
}