{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,6LAAC;QAAI,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE;KAJS","debugId":null}},
    {"offset": {"line": 158, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/actions/verify-status.ts"],"sourcesContent":["\"use server\";\n\nimport { verifyAtmStatus, type VerifyAtmStatusInput, type VerifyAtmStatusOutput } from \"@/ai/flows/verify-atm-status\";\n\nexport async function verifyAtmStatusAction(input: VerifyAtmStatusInput): Promise<VerifyAtmStatusOutput> {\n    try {\n        const result = await verifyAtmStatus(input);\n        return result;\n    } catch (error) {\n        console.error(\"Error verifying ATM status with AI:\", error);\n        throw new Error(\"AI verification failed.\");\n    }\n}\n"],"names":[],"mappings":";;;;;;IAIsB,wBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 174, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/alert.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,6JACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG3B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAO,EAAE,oBACnC,6LAAC;QACC,KAAK;QACL,MAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG;AAEpB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,gDAAgD;QAC7D,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,iCAAmB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,iBAAiB,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 251, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/atm-verification-client.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from 'react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from './ui/card';\nimport { Button } from './ui/button';\nimport { Loader2, BrainCircuit, ShieldCheck, HelpCircle } from 'lucide-react';\nimport type { Atm } from '@/types';\nimport { verifyAtmStatusAction } from '@/actions/verify-status';\nimport type { VerifyAtmStatusOutput } from '@/ai/flows/verify-atm-status';\nimport { Alert, AlertDescription, AlertTitle } from './ui/alert';\nimport { Badge } from './ui/badge';\n\n\nexport function AtmVerificationClient({ atm }: { atm: Atm }) {\n    const [loading, setLoading] = useState(false);\n    const [result, setResult] = useState<VerifyAtmStatusOutput | null>(null);\n    const [error, setError] = useState<string | null>(null);\n\n    const handleVerification = async () => {\n        setLoading(true);\n        setError(null);\n        try {\n            const verificationResult = await verifyAtmStatusAction({\n                atmId: atm.id,\n                reports: atm.reports,\n            });\n            setResult(verificationResult);\n        } catch (e) {\n            setError('Falha ao verificar o status. Tente novamente.');\n            console.error(e);\n        } finally {\n            setLoading(false);\n        }\n    };\n    \n    const StatusIcon = ({status}: {status: string}) => {\n        switch (status) {\n            case 'com_dinheiro':\n                return <ShieldCheck className=\"h-5 w-5 text-accent\" />;\n            case 'sem_dinheiro':\n                return <ShieldCheck className=\"h-5 w-5 text-destructive\" />;\n            default:\n                return <HelpCircle className=\"h-5 w-5 text-muted-foreground\" />;\n        }\n    }\n\n    return (\n        <Card className=\"sticky top-24\">\n            <CardHeader>\n                <CardTitle className=\"flex items-center gap-2\">\n                    <BrainCircuit className=\"h-6 w-6 text-primary\" />\n                    Verificação com IA\n                </CardTitle>\n                <CardDescription>\n                    Use nossa IA para analisar os relatos e obter um status verificado.\n                </CardDescription>\n            </CardHeader>\n            <CardContent>\n                <Button onClick={handleVerification} disabled={loading} className=\"w-full\">\n                    {loading ? <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" /> : null}\n                    Verificar Status\n                </Button>\n\n                {error && <p className=\"mt-4 text-sm text-destructive\">{error}</p>}\n\n                {result && (\n                     <Alert className=\"mt-4\">\n                        <StatusIcon status={result.verifiedStatus} />\n                        <AlertTitle className=\"capitalize\">\n                            Status Verificado: {result.verifiedStatus.replace('_', ' ')}\n                        </AlertTitle>\n                        <AlertDescription className=\"space-y-2\">\n                           <p>{result.reasoning}</p>\n                           <p>\n                             Confiança: <Badge variant=\"secondary\">{Math.round(result.confidenceScore * 100)}%</Badge>\n                           </p>\n                        </AlertDescription>\n                    </Alert>\n                )}\n            </CardContent>\n        </Card>\n    );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;;;AAVA;;;;;;;;AAaO,SAAS,sBAAsB,EAAE,GAAG,EAAgB;;IACvD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAgC;IACnE,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAElD,MAAM,qBAAqB;QACvB,WAAW;QACX,SAAS;QACT,IAAI;YACA,MAAM,qBAAqB,MAAM,CAAA,GAAA,yJAAA,CAAA,wBAAqB,AAAD,EAAE;gBACnD,OAAO,IAAI,EAAE;gBACb,SAAS,IAAI,OAAO;YACxB;YACA,UAAU;QACd,EAAE,OAAO,GAAG;YACR,SAAS;YACT,QAAQ,KAAK,CAAC;QAClB,SAAU;YACN,WAAW;QACf;IACJ;IAEA,MAAM,aAAa,CAAC,EAAC,MAAM,EAAmB;QAC1C,OAAQ;YACJ,KAAK;gBACD,qBAAO,6LAAC,uNAAA,CAAA,cAAW;oBAAC,WAAU;;;;;;YAClC,KAAK;gBACD,qBAAO,6LAAC,uNAAA,CAAA,cAAW;oBAAC,WAAU;;;;;;YAClC;gBACI,qBAAO,6LAAC,qNAAA,CAAA,aAAU;oBAAC,WAAU;;;;;;QACrC;IACJ;IAEA,qBACI,6LAAC,mIAAA,CAAA,OAAI;QAAC,WAAU;;0BACZ,6LAAC,mIAAA,CAAA,aAAU;;kCACP,6LAAC,mIAAA,CAAA,YAAS;wBAAC,WAAU;;0CACjB,6LAAC,yNAAA,CAAA,eAAY;gCAAC,WAAU;;;;;;4BAAyB;;;;;;;kCAGrD,6LAAC,mIAAA,CAAA,kBAAe;kCAAC;;;;;;;;;;;;0BAIrB,6LAAC,mIAAA,CAAA,cAAW;;kCACR,6LAAC,qIAAA,CAAA,SAAM;wBAAC,SAAS;wBAAoB,UAAU;wBAAS,WAAU;;4BAC7D,wBAAU,6LAAC,oNAAA,CAAA,UAAO;gCAAC,WAAU;;;;;uCAAiC;4BAAK;;;;;;;oBAIvE,uBAAS,6LAAC;wBAAE,WAAU;kCAAiC;;;;;;oBAEvD,wBACI,6LAAC,oIAAA,CAAA,QAAK;wBAAC,WAAU;;0CACd,6LAAC;gCAAW,QAAQ,OAAO,cAAc;;;;;;0CACzC,6LAAC,oIAAA,CAAA,aAAU;gCAAC,WAAU;;oCAAa;oCACX,OAAO,cAAc,CAAC,OAAO,CAAC,KAAK;;;;;;;0CAE3D,6LAAC,oIAAA,CAAA,mBAAgB;gCAAC,WAAU;;kDACzB,6LAAC;kDAAG,OAAO,SAAS;;;;;;kDACpB,6LAAC;;4CAAE;0DACU,6LAAC,oIAAA,CAAA,QAAK;gDAAC,SAAQ;;oDAAa,KAAK,KAAK,CAAC,OAAO,eAAe,GAAG;oDAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQ7G;GArEgB;KAAA","debugId":null}},
    {"offset": {"line": 477, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/atm-detail.tsx"],"sourcesContent":["import type { Atm } from '@/types';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { CheckCircle2, CircleSlash, HelpCircle, MapPin, Clock } from 'lucide-react';\nimport { format } from 'date-fns';\nimport { ptBR } from 'date-fns/locale';\nimport { AtmVerificationClient } from './atm-verification-client';\n\ntype StatusVariant = 'default' | 'destructive' | 'secondary';\n\nconst statusMap: { [key in Atm['status']]: { text: string; variant: StatusVariant; icon: React.ReactNode } } = {\n  com_dinheiro: { text: 'Com Dinheiro', variant: 'default', icon: <CheckCircle2 className=\"h-4 w-4 text-accent\" /> },\n  sem_dinheiro: { text: 'Sem Dinheiro', variant: 'destructive', icon: <CircleSlash className=\"h-4 w-4\" /> },\n  desconhecido: { text: 'Desconhecido', variant: 'secondary', icon: <HelpCircle className=\"h-4 w-4\" /> },\n};\n\nexport function AtmDetail({ atm }: { atm: Atm }) {\n  const statusInfo = statusMap[atm.status];\n\n  return (\n    <div className=\"grid gap-8 md:grid-cols-3\">\n        <div className=\"md:col-span-2 space-y-8\">\n            <Card>\n                <CardHeader>\n                    <CardTitle className=\"flex items-center justify-between font-headline text-3xl\">\n                        {atm.name}\n                        <Badge variant={statusInfo.variant} className=\"flex items-center gap-1 text-base\">\n                            {statusInfo.icon}\n                            {statusInfo.text}\n                        </Badge>\n                    </CardTitle>\n                    <CardDescription className=\"flex items-center gap-2 pt-2\">\n                        <MapPin className=\"h-4 w-4\" />\n                        {atm.address}\n                    </CardDescription>\n                </CardHeader>\n                <CardContent>\n                    <div className=\"text-sm text-muted-foreground\">\n                        <p>Última atualização: {format(new Date(atm.lastUpdate), \"dd/MM/yyyy 'às' HH:mm\", { locale: ptBR })}</p>\n                    </div>\n                </CardContent>\n            </Card>\n\n            <Card>\n                <CardHeader>\n                    <CardTitle>Histórico de Atualizações</CardTitle>\n                </CardHeader>\n                <CardContent>\n                    <ul className=\"space-y-4\">\n                        {atm.reports.map((report, index) => (\n                            <li key={index} className=\"flex items-center justify-between\">\n                                <div className=\"flex items-center gap-3\">\n                                    {report.status === 'com_dinheiro' ? <CheckCircle2 className=\"h-5 w-5 text-accent\" /> : <CircleSlash className=\"h-5 w-5 text-destructive\" />}\n                                    <div>\n                                        <p className=\"font-medium\">Status: {report.status === 'com_dinheiro' ? 'Com Dinheiro' : 'Sem Dinheiro'}</p>\n                                        <p className=\"text-sm text-muted-foreground\">por {report.userName}</p>\n                                    </div>\n                                </div>\n                                <div className=\"text-sm text-muted-foreground flex items-center gap-2\">\n                                   <Clock className=\"h-4 w-4\" />\n                                   {format(new Date(report.timestamp), \"dd/MM 'às' HH:mm\", { locale: ptBR })}\n                                </div>\n                            </li>\n                        ))}\n                    </ul>\n                </CardContent>\n            </Card>\n        </div>\n\n        <div className=\"md:col-span-1\">\n             <AtmVerificationClient atm={atm} />\n        </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;AAIA,MAAM,YAAyG;IAC7G,cAAc;QAAE,MAAM;QAAgB,SAAS;QAAW,oBAAM,6LAAC,wNAAA,CAAA,eAAY;YAAC,WAAU;;;;;;IAAyB;IACjH,cAAc;QAAE,MAAM;QAAgB,SAAS;QAAe,oBAAM,6LAAC,uNAAA,CAAA,cAAW;YAAC,WAAU;;;;;;IAAa;IACxG,cAAc;QAAE,MAAM;QAAgB,SAAS;QAAa,oBAAM,6LAAC,qNAAA,CAAA,aAAU;YAAC,WAAU;;;;;;IAAa;AACvG;AAEO,SAAS,UAAU,EAAE,GAAG,EAAgB;IAC7C,MAAM,aAAa,SAAS,CAAC,IAAI,MAAM,CAAC;IAExC,qBACE,6LAAC;QAAI,WAAU;;0BACX,6LAAC;gBAAI,WAAU;;kCACX,6LAAC,mIAAA,CAAA,OAAI;;0CACD,6LAAC,mIAAA,CAAA,aAAU;;kDACP,6LAAC,mIAAA,CAAA,YAAS;wCAAC,WAAU;;4CAChB,IAAI,IAAI;0DACT,6LAAC,oIAAA,CAAA,QAAK;gDAAC,SAAS,WAAW,OAAO;gDAAE,WAAU;;oDACzC,WAAW,IAAI;oDACf,WAAW,IAAI;;;;;;;;;;;;;kDAGxB,6LAAC,mIAAA,CAAA,kBAAe;wCAAC,WAAU;;0DACvB,6LAAC,6MAAA,CAAA,SAAM;gDAAC,WAAU;;;;;;4CACjB,IAAI,OAAO;;;;;;;;;;;;;0CAGpB,6LAAC,mIAAA,CAAA,cAAW;0CACR,cAAA,6LAAC;oCAAI,WAAU;8CACX,cAAA,6LAAC;;4CAAE;4CAAqB,CAAA,GAAA,yJAAA,CAAA,SAAM,AAAD,EAAE,IAAI,KAAK,IAAI,UAAU,GAAG,yBAAyB;gDAAE,QAAQ,qJAAA,CAAA,OAAI;4CAAC;;;;;;;;;;;;;;;;;;;;;;;kCAK7G,6LAAC,mIAAA,CAAA,OAAI;;0CACD,6LAAC,mIAAA,CAAA,aAAU;0CACP,cAAA,6LAAC,mIAAA,CAAA,YAAS;8CAAC;;;;;;;;;;;0CAEf,6LAAC,mIAAA,CAAA,cAAW;0CACR,cAAA,6LAAC;oCAAG,WAAU;8CACT,IAAI,OAAO,CAAC,GAAG,CAAC,CAAC,QAAQ,sBACtB,6LAAC;4CAAe,WAAU;;8DACtB,6LAAC;oDAAI,WAAU;;wDACV,OAAO,MAAM,KAAK,+BAAiB,6LAAC,wNAAA,CAAA,eAAY;4DAAC,WAAU;;;;;iFAA2B,6LAAC,uNAAA,CAAA,cAAW;4DAAC,WAAU;;;;;;sEAC9G,6LAAC;;8EACG,6LAAC;oEAAE,WAAU;;wEAAc;wEAAS,OAAO,MAAM,KAAK,iBAAiB,iBAAiB;;;;;;;8EACxF,6LAAC;oEAAE,WAAU;;wEAAgC;wEAAK,OAAO,QAAQ;;;;;;;;;;;;;;;;;;;8DAGzE,6LAAC;oDAAI,WAAU;;sEACZ,6LAAC,uMAAA,CAAA,QAAK;4DAAC,WAAU;;;;;;wDAChB,CAAA,GAAA,yJAAA,CAAA,SAAM,AAAD,EAAE,IAAI,KAAK,OAAO,SAAS,GAAG,oBAAoB;4DAAE,QAAQ,qJAAA,CAAA,OAAI;wDAAC;;;;;;;;2CAVrE;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAmB7B,6LAAC;gBAAI,WAAU;0BACV,cAAA,6LAAC,sJAAA,CAAA,wBAAqB;oBAAC,KAAK;;;;;;;;;;;;;;;;;AAIzC;KA1DgB","debugId":null}},
    {"offset": {"line": 774, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/mock-data.ts"],"sourcesContent":["import type { Atm } from '@/types';\n\nexport const mockAtms: Atm[] = [\n  {\n    id: 'atm_id_1',\n    name: 'Caixa do BCI - Mutamba',\n    location: { lat: -8.8157, lng: 13.2306 },\n    address: 'Largo da Mutamba, Luanda, Angola',\n    status: 'com_dinheiro',\n    lastUpdate: '2025-07-15T09:00:00Z',\n    reports: [\n      { userId: 'user123', status: 'com_dinheiro', timestamp: '2025-07-15T08:55:00Z' },\n      { userId: 'user456', status: 'com_dinheiro', timestamp: '2025-07-15T08:30:00Z' },\n      { userId: 'user789', status: 'sem_dinheiro', timestamp: '2025-07-14T18:00:00Z' },\n    ],\n  },\n  {\n    id: 'atm_id_2',\n    name: 'Caixa do BAI - Aeroporto',\n    location: { lat: -8.8583, lng: 13.2792 },\n    address: 'Aeroporto 4 de Fevereiro, Luanda, Angola',\n    status: 'sem_dinheiro',\n    lastUpdate: '2025-07-15T10:15:00Z',\n    reports: [\n      { userId: 'userABC', status: 'sem_dinheiro', timestamp: '2025-07-15T10:15:00Z' },\n      { userId: 'userDEF', status: 'sem_dinheiro', timestamp: '2025-07-15T09:45:00Z' },\n    ],\n  },\n  {\n    id: 'atm_id_3',\n    name: 'Caixa Atlantico - Belas Shopping',\n    location: { lat: -8.9015, lng: 13.2033 },\n    address: 'Av. Luanda Sul, Belas, Angola',\n    status: 'desconhecido',\n    lastUpdate: '2025-07-14T11:00:00Z',\n    reports: [\n        { userId: 'userXYZ', status: 'com_dinheiro', timestamp: '2025-07-14T10:00:00Z' },\n    ],\n  },\n];\n"],"names":[],"mappings":";;;AAEO,MAAM,WAAkB;IAC7B;QACE,IAAI;QACJ,MAAM;QACN,UAAU;YAAE,KAAK,CAAC;YAAQ,KAAK;QAAQ;QACvC,SAAS;QACT,QAAQ;QACR,YAAY;QACZ,SAAS;YACP;gBAAE,QAAQ;gBAAW,QAAQ;gBAAgB,WAAW;YAAuB;YAC/E;gBAAE,QAAQ;gBAAW,QAAQ;gBAAgB,WAAW;YAAuB;YAC/E;gBAAE,QAAQ;gBAAW,QAAQ;gBAAgB,WAAW;YAAuB;SAChF;IACH;IACA;QACE,IAAI;QACJ,MAAM;QACN,UAAU;YAAE,KAAK,CAAC;YAAQ,KAAK;QAAQ;QACvC,SAAS;QACT,QAAQ;QACR,YAAY;QACZ,SAAS;YACP;gBAAE,QAAQ;gBAAW,QAAQ;gBAAgB,WAAW;YAAuB;YAC/E;gBAAE,QAAQ;gBAAW,QAAQ;gBAAgB,WAAW;YAAuB;SAChF;IACH;IACA;QACE,IAAI;QACJ,MAAM;QACN,UAAU;YAAE,KAAK,CAAC;YAAQ,KAAK;QAAQ;QACvC,SAAS;QACT,QAAQ;QACR,YAAY;QACZ,SAAS;YACL;gBAAE,QAAQ;gBAAW,QAAQ;gBAAgB,WAAW;YAAuB;SAClF;IACH;CACD","debugId":null}},
    {"offset": {"line": 857, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/dashboard/atm/%5Bid%5D/page.tsx"],"sourcesContent":["'use client'\nimport { AtmDetail } from '@/components/atm-detail';\nimport { notFound } from 'next/navigation';\nimport type { Atm } from '@/types';\nimport { mockAtms } from '@/lib/mock-data'; // Importa os dados mockados\n\nexport default function AtmDetailPage({ params }: { params: { id: string } }) {\n  const { id: atmId } = params;\n\n  // Procura o ATM nos dados mockados\n  const atmData = mockAtms.find(atm => atm.id === atmId);\n\n  // Se não encontrar o ATM, exibe a página de não encontrado\n  if (!atmData) {\n    notFound();\n  }\n\n  // Renderiza o componente com os dados do ATM encontrado\n  return <AtmDetail atm={atmData} />;\n}\n"],"names":[],"mappings":";;;;AACA;AACA;AAEA,yNAA4C,4BAA4B;AAJxE;;;;;AAMe,SAAS,cAAc,EAAE,MAAM,EAA8B;IAC1E,MAAM,EAAE,IAAI,KAAK,EAAE,GAAG;IAEtB,mCAAmC;IACnC,MAAM,UAAU,6HAAA,CAAA,WAAQ,CAAC,IAAI,CAAC,CAAA,MAAO,IAAI,EAAE,KAAK;IAEhD,2DAA2D;IAC3D,IAAI,CAAC,SAAS;QACZ,CAAA,GAAA,qIAAA,CAAA,WAAQ,AAAD;IACT;IAEA,wDAAwD;IACxD,qBAAO,6LAAC,sIAAA,CAAA,YAAS;QAAC,KAAK;;;;;;AACzB;KAbwB","debugId":null}}]
}