rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if the user is an admin
    function isAdmin() {
      return request.auth != null && request.auth.uid == 'admin_user_id';
    }

    // ---------------- ATMs ----------------
    match /atms/{atmId} {
      allow read: if true; // público
      allow create, update, delete: if isAdmin();
    }

    // ---------------- Users ----------------
    match /users/{userId} {
      // Admin pode ler todos, usuários só o próprio
      allow read: if (request.auth != null && request.auth.uid == userId) || isAdmin();
      
      // O próprio usuário pode modificar só seu doc
      allow update, delete: if request.auth != null && request.auth.uid == userId;
      
      // Criar conta ao registrar
      allow create: if request.auth != null;

      // Subcoleção follows
      match /follows/{atmId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
    }

    // ---------------- ATM Suggestions ----------------
    match /atm_suggestions/{suggestionId} {
      allow create: if request.auth != null;
      allow read, update: if isAdmin();
    }
    
    // ---------------- Notifications ----------------
    match /notifications/{notificationId} {
      allow read: if (request.auth != null && resource.data.userId == request.auth.uid) || isAdmin();
      allow create: if isAdmin();
    }

    // ---------------- Collection Group para follows ----------------
    match /{path=**}/follows/{atmId} {
      allow read: if isAdmin();
    }

    // ---------------- Default deny (fallback) ----------------
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
