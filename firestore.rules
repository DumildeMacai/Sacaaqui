
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Funções de conveniência
    function isUserAuthenticated() {
      return request.auth != null;
    }
    
    function isRequestingOwnData(userId) {
      return isUserAuthenticated() && request.auth.uid == userId;
    }
    
    function isAdmin() {
      // O admin é identificado pelo seu UID específico.
      return isUserAuthenticated() && request.auth.uid == 'admin_user_id';
    }

    // Regras para a coleção de utilizadores
    match /users/{userId} {
      // Um utilizador só pode ler e atualizar os seus próprios dados.
      // A criação (registo) é permitida a qualquer um.
      allow read, update: if isRequestingOwnData(userId) || isAdmin();
      allow create: if isUserAuthenticated();
      allow list, delete: if isAdmin();
      
      // Regras para a subcoleção de ATMs seguidos
      match /follows/{atmId} {
        // O utilizador só pode gerir a sua própria lista de ATMs seguidos.
        allow read, write, delete: if isRequestingOwnData(userId);
        allow list: if isAdmin(); // Admin pode listar para fins de auditoria, se necessário
      }
    }
    
    // Regras para a coleção de ATMs
    match /atms/{atmId} {
      // Todos podem ler a informação dos ATMs.
      allow read: if true;
      
      // Apenas administradores podem criar, atualizar ou apagar ATMs.
      allow write, delete: if isAdmin();
    }
    
    // Regras para a coleção de sugestões de ATMs
    match /atm_suggestions/{suggestionId} {
      // Utilizadores autenticados podem criar sugestões.
      allow create: if isUserAuthenticated();
      
      // Apenas administradores podem ler, atualizar (aprovar/rejeitar) ou apagar sugestões.
      allow read, update, delete: if isAdmin();
    }
    
    // Regras para a coleção de notificações
    match /notifications/{notificationId} {
      // O utilizador só pode ler e atualizar as suas próprias notificações.
      allow read, update: if isRequestingOwnData(resource.data.userId) || isAdmin();
      allow create, delete, list: if isAdmin(); // A criação é controlada pelo backend (actions)
    }

    // Permitir consulta de grupo de coleções (collectionGroup) para 'follows'
    // Necessário para encontrar todos os seguidores de um ATM.
    // A segurança é aplicada implicitamente, pois as notificações só são criadas no backend.
    match /{path=**}/follows/{followId} {
      allow read: if isUserAuthenticated(); // Permitir leitura para a query do backend
    }
  }
}
