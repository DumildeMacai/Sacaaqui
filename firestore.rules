rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for admin role
    function isAdmin() {
      // Check if the user is the specific admin user by UID
      return request.auth != null && request.auth.uid == 'admin_user_id';
    }

    // Default deny all reads/writes
    match /{document=**} {
      allow read, write: if false;
    }

    // Admins have full read/write access to all collections
    match /{path=**} {
      allow read, write: if isAdmin();
    }
    
    // ATMs: Publicly readable, writable only by admins
    match /atms/{atmId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // ATM Suggestions: Creatable by any authenticated user, manageable by admins
    match /atm_suggestions/{suggestionId} {
      allow create: if request.auth != null;
      allow read, update, delete: if isAdmin();
    }

    // Users collection
    match /users/{userId} {
      // Users can read/update their own profile. Only admins can delete/create other users.
      allow read, update: if request.auth.uid == userId;
      allow create, delete, list: if isAdmin();
      
      // Users can manage their own 'follows' subcollection
      match /follows/{atmId} {
        allow read, write, delete: if request.auth.uid == userId;
      }
    }
    
    // Notifications: Users can only access their own
    match /notifications/{notificationId} {
        allow read, write, create: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }

    // Collection Group Queries
    // Allow admins to query the 'follows' group to send notifications
    match /{path=**}/follows/{atmId} {
      allow read: if isAdmin();
    }
  }
}
