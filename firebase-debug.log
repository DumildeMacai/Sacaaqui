[debug] [2025-09-10T12:04:00.320Z] ----------------------------------------------------------------------
[debug] [2025-09-10T12:04:00.335Z] Command:       /nix/store/ws50yvm6vzlzf7jzz6n7xh4szddrack1-nodejs-20.19.1/bin/node /nix/store/wma3rvxxva78rqvnpja82nx5b3mclpxg-firebase-tools-14.15.2/lib/node_modules/firebase-tools/lib/bin/firebase.js emulators:start --project=demo-app --only=auth,firestore
[debug] [2025-09-10T12:04:00.344Z] CLI Version:   14.15.2
[debug] [2025-09-10T12:04:00.344Z] Platform:      linux
[debug] [2025-09-10T12:04:00.344Z] Node Version:  v20.19.1
[debug] [2025-09-10T12:04:00.345Z] Time:          Wed Sep 10 2025 12:04:00 GMT+0000 (Coordinated Universal Time)
[debug] [2025-09-10T12:04:00.345Z] ----------------------------------------------------------------------
[debug] 
[debug] [2025-09-10T12:04:00.356Z] >>> [apiv2][query] GET https://firebase-public.firebaseio.com/cli.json [none]
[debug] [2025-09-10T12:04:02.300Z] <<< [apiv2][status] GET https://firebase-public.firebaseio.com/cli.json 200
[debug] [2025-09-10T12:04:02.303Z] <<< [apiv2][body] GET https://firebase-public.firebaseio.com/cli.json {"cloudBuildErrorAfter":1594252800000,"cloudBuildWarnAfter":1590019200000,"defaultNode10After":1594252800000,"minVersion":"3.0.5","node8DeploysDisabledAfter":1613390400000,"node8RuntimeDisabledAfter":1615809600000,"node8WarnAfter":1600128000000}
[debug] [2025-09-10T12:04:02.774Z] openjdk version "21.0.7" 2025-04-15

[debug] [2025-09-10T12:04:02.778Z] OpenJDK Runtime Environment (build 21.0.7+6-nixos)
OpenJDK 64-Bit Server VM (build 21.0.7+6-nixos, mixed mode, sharing)

[debug] [2025-09-10T12:04:02.818Z] Parsed Java major version: 21
[info] i  emulators: Starting emulators: firestore {"metadata":{"emulator":{"name":"hub"},"message":"Starting emulators: firestore"}}
[info] i  emulators: Detected demo project ID "demo-app", emulated services will use a demo configuration and attempts to access non-emulated services for this project will fail. {"metadata":{"emulator":{"name":"hub"},"message":"Detected demo project ID \"demo-app\", emulated services will use a demo configuration and attempts to access non-emulated services for this project will fail."}}
[warn] ⚠  auth: Not starting the auth emulator, make sure you have run firebase init. {"metadata":{"emulator":{"name":"auth"},"message":"Not starting the auth emulator, make sure you have run firebase init."}}
[warn] ⚠  hub: Error when trying to check port 4400 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:4400 {"metadata":{"emulator":{"name":"hub"},"message":"Error when trying to check port 4400 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:4400"}}
[warn] ⚠  hub: Port 4400 is available on 127.0.0.1 but not ::1. This may cause issues with some clients. {"metadata":{"emulator":{"name":"hub"},"message":"Port 4400 is available on 127.0.0.1 but not ::1. This may cause issues with some clients."}}
[warn] ⚠  hub: If you encounter connectivity issues, consider switching to a different port or explicitly specifying "host": "<ip address>" instead of hostname in firebase.json {"metadata":{"emulator":{"name":"hub"},"message":"If you encounter connectivity issues, consider switching to a different port or explicitly specifying \"host\": \"<ip address>\" instead of hostname in firebase.json"}}
[warn] ⚠  ui: Error when trying to check port 4000 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:4000 {"metadata":{"emulator":{"name":"ui"},"message":"Error when trying to check port 4000 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:4000"}}
[warn] ⚠  ui: Port 4000 is available on 127.0.0.1 but not ::1. This may cause issues with some clients. {"metadata":{"emulator":{"name":"ui"},"message":"Port 4000 is available on 127.0.0.1 but not ::1. This may cause issues with some clients."}}
[warn] ⚠  ui: If you encounter connectivity issues, consider switching to a different port or explicitly specifying "host": "<ip address>" instead of hostname in firebase.json {"metadata":{"emulator":{"name":"ui"},"message":"If you encounter connectivity issues, consider switching to a different port or explicitly specifying \"host\": \"<ip address>\" instead of hostname in firebase.json"}}
[warn] ⚠  logging: Error when trying to check port 4500 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:4500 {"metadata":{"emulator":{"name":"logging"},"message":"Error when trying to check port 4500 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:4500"}}
[warn] ⚠  logging: Port 4500 is available on 127.0.0.1 but not ::1. This may cause issues with some clients. {"metadata":{"emulator":{"name":"logging"},"message":"Port 4500 is available on 127.0.0.1 but not ::1. This may cause issues with some clients."}}
[warn] ⚠  logging: If you encounter connectivity issues, consider switching to a different port or explicitly specifying "host": "<ip address>" instead of hostname in firebase.json {"metadata":{"emulator":{"name":"logging"},"message":"If you encounter connectivity issues, consider switching to a different port or explicitly specifying \"host\": \"<ip address>\" instead of hostname in firebase.json"}}
[warn] ⚠  firestore: Error when trying to check port 8080 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:8080 {"metadata":{"emulator":{"name":"firestore"},"message":"Error when trying to check port 8080 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:8080"}}
[warn] ⚠  firestore: Port 8080 is available on 127.0.0.1 but not ::1. This may cause issues with some clients. {"metadata":{"emulator":{"name":"firestore"},"message":"Port 8080 is available on 127.0.0.1 but not ::1. This may cause issues with some clients."}}
[warn] ⚠  firestore: If you encounter connectivity issues, consider switching to a different port or explicitly specifying "host": "<ip address>" instead of hostname in firebase.json {"metadata":{"emulator":{"name":"firestore"},"message":"If you encounter connectivity issues, consider switching to a different port or explicitly specifying \"host\": \"<ip address>\" instead of hostname in firebase.json"}}
[warn] ⚠  firestore.websocket: Error when trying to check port 9150 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:9150 {"metadata":{"emulator":{"name":"firestore"},"message":"Error when trying to check port 9150 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:9150"}}
[warn] ⚠  firestore: Port 9150 is available on 127.0.0.1 but not ::1. This may cause issues with some clients. {"metadata":{"emulator":{"name":"firestore"},"message":"Port 9150 is available on 127.0.0.1 but not ::1. This may cause issues with some clients."}}
[warn] ⚠  firestore: If you encounter connectivity issues, consider switching to a different port or explicitly specifying "host": "<ip address>" instead of hostname in firebase.json {"metadata":{"emulator":{"name":"firestore"},"message":"If you encounter connectivity issues, consider switching to a different port or explicitly specifying \"host\": \"<ip address>\" instead of hostname in firebase.json"}}
[debug] [2025-09-10T12:04:02.839Z] assigned listening specs for emulators {"user":{"hub":[{"address":"127.0.0.1","family":"IPv4","port":4400}],"ui":[{"address":"127.0.0.1","family":"IPv4","port":4000}],"logging":[{"address":"127.0.0.1","family":"IPv4","port":4500}],"firestore":[{"address":"127.0.0.1","family":"IPv4","port":8080}],"firestore.websocket":[{"address":"127.0.0.1","family":"IPv4","port":9150}]},"metadata":{"message":"assigned listening specs for emulators"}}
[debug] [2025-09-10T12:04:02.847Z] [hub] writing locator at /tmp/hub-demo-app.json
[debug] [2025-09-10T12:04:02.869Z] Ignoring unsupported arg: auto_download {"metadata":{"emulator":{"name":"firestore"},"message":"Ignoring unsupported arg: auto_download"}}
[debug] [2025-09-10T12:04:02.870Z] Ignoring unsupported arg: single_project_mode_error {"metadata":{"emulator":{"name":"firestore"},"message":"Ignoring unsupported arg: single_project_mode_error"}}
[debug] [2025-09-10T12:04:02.870Z] Starting Firestore Emulator with command {"binary":"java","args":["-Dgoogle.cloud_firestore.debug_log_level=FINE","-Duser.language=en","-jar","/nix/store/3laqb760jgfb1kqsqz3g7mjnk41l8iwg-emulators/cloud-firestore-emulator-v1.19.8.jar","--host","127.0.0.1","--port",8080,"--websocket_port",9150,"--project_id","demo-app","--rules","/home/user/studio/firestore.rules","--single_project_mode",true],"optionalArgs":["port","webchannel_port","host","rules","websocket_port","functions_emulator","seed_from_export","project_id","single_project_mode"],"joinArgs":false,"shell":false,"port":8080} {"metadata":{"emulator":{"name":"firestore"},"message":"Starting Firestore Emulator with command {\"binary\":\"java\",\"args\":[\"-Dgoogle.cloud_firestore.debug_log_level=FINE\",\"-Duser.language=en\",\"-jar\",\"/nix/store/3laqb760jgfb1kqsqz3g7mjnk41l8iwg-emulators/cloud-firestore-emulator-v1.19.8.jar\",\"--host\",\"127.0.0.1\",\"--port\",8080,\"--websocket_port\",9150,\"--project_id\",\"demo-app\",\"--rules\",\"/home/user/studio/firestore.rules\",\"--single_project_mode\",true],\"optionalArgs\":[\"port\",\"webchannel_port\",\"host\",\"rules\",\"websocket_port\",\"functions_emulator\",\"seed_from_export\",\"project_id\",\"single_project_mode\"],\"joinArgs\":false,\"shell\":false,\"port\":8080}"}}
[info] i  firestore: Firestore Emulator logging to firestore-debug.log {"metadata":{"emulator":{"name":"firestore"},"message":"Firestore Emulator logging to firestore-debug.log"}}
[debug] [2025-09-10T12:04:07.330Z] Sep 10, 2025 12:04:07 PM com.google.cloud.datastore.emulator.firestore.websocket.WebSocketServer start
INFO: Started WebSocket server on ws://127.0.0.1:9150
 {"metadata":{"emulator":{"name":"firestore"},"message":"Sep 10, 2025 12:04:07 PM com.google.cloud.datastore.emulator.firestore.websocket.WebSocketServer start\nINFO: Started WebSocket server on ws://127.0.0.1:9150\n"}}
[debug] [2025-09-10T12:04:07.424Z] API endpoint: http:// {"metadata":{"emulator":{"name":"firestore"},"message":"API endpoint: http://"}}
[debug] [2025-09-10T12:04:07.426Z] 127.0.0.1:8080
If you are using a library that supports the FIRESTORE_EMULATOR_HOST environment variable, run:

   export FIRESTORE_EMULATOR_HOST=127.0.0.1:8080

If you are running a Firestore in Datastore Mode project, run:

   export DATASTORE_EMULATOR_HOST=127.0.0.1:8080

Note: Support for Datastore Mode is in preview. If you encounter any bugs please file at https://github.com/firebase/firebase-tools/issues.
Dev App Server is now running.

 {"metadata":{"emulator":{"name":"firestore"},"message":"127.0.0.1:8080\nIf you are using a library that supports the FIRESTORE_EMULATOR_HOST environment variable, run:\n\n   export FIRESTORE_EMULATOR_HOST=127.0.0.1:8080\n\nIf you are running a Firestore in Datastore Mode project, run:\n\n   export DATASTORE_EMULATOR_HOST=127.0.0.1:8080\n\nNote: Support for Datastore Mode is in preview. If you encounter any bugs please file at https://github.com/firebase/firebase-tools/issues.\nDev App Server is now running.\n\n"}}
[info] ✔  firestore: Firestore Emulator UI websocket is running on 9150. {"metadata":{"emulator":{"name":"firestore"},"message":"Firestore Emulator UI websocket is running on 9150."}}
[debug] [2025-09-10T12:04:07.621Z] Could not find VSCode notification endpoint: FetchError: request to http://localhost:40001/vscode/notify failed, reason: connect ECONNREFUSED 127.0.0.1:40001. If you are not running the Firebase Data Connect VSCode extension, this is expected and not an issue.
[info] 
┌─────────────────────────────────────────────────────────────┐
│ ✔  All emulators ready! It is now safe to connect your app. │
│ i  View Emulator UI at http://127.0.0.1:4000/               │
└─────────────────────────────────────────────────────────────┘

┌───────────┬────────────────┬─────────────────────────────────┐
│ Emulator  │ Host:Port      │ View in Emulator UI             │
├───────────┼────────────────┼─────────────────────────────────┤
│ Firestore │ 127.0.0.1:8080 │ http://127.0.0.1:4000/firestore │
└───────────┴────────────────┴─────────────────────────────────┘
  Emulator Hub host: 127.0.0.1 port: 4400
  Other reserved ports: 4500, 9150

Issues? Report them at https://github.com/firebase/firebase-tools/issues and attach the *-debug.log files.
 
[info] i  firestore: Change detected, updating rules... 
[debug] [2025-09-10T12:12:05.784Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules [none]
[debug] [2025-09-10T12:12:05.784Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"\nrules_version = '2';\n\nservice cloud.firestore {\n  match /databases/{database}/documents {\n  \n    // Funções de conveniência\n    function isUserAuthenticated() {\n      return request.auth != null;\n    }\n    \n    function isRequestingOwnData(userId) {\n      return isUserAuthenticated() && request.auth.uid == userId;\n    }\n    \n    function isAdmin() {\n      // O admin é identificado pelo seu UID específico.\n      return isUserAuthenticated() && request.auth.uid == 'admin_user_id';\n    }\n\n    // Regras para a coleção de utilizadores\n    match /users/{userId} {\n      // Um utilizador só pode ler e atualizar os seus próprios dados.\n      // A criação (registo) é permitida a qualquer um.\n      allow read, update: if isRequestingOwnData(userId) || isAdmin();\n      allow create: if isUserAuthenticated();\n      allow list, delete: if isAdmin();\n      \n      // Regras para a subcoleção de ATMs seguidos\n      match /follows/{atmId} {\n        // O utilizador só pode gerir a sua própria lista de ATMs seguidos.\n        allow read, write, delete: if isRequestingOwnData(userId);\n        allow list: if isAdmin(); // Admin pode listar para fins de auditoria, se necessário\n      }\n    }\n    \n    // Regras para a coleção de ATMs\n    match /atms/{atmId} {\n      // Todos podem ler a informação dos ATMs.\n      allow read: if true;\n      \n      // Apenas administradores podem criar, atualizar ou apagar ATMs.\n      allow write, delete: if isAdmin();\n    }\n    \n    // Regras para a coleção de sugestões de ATMs\n    match /atm_suggestions/{suggestionId} {\n      // Utilizadores autenticados podem criar sugestões.\n      allow create: if isUserAuthenticated();\n      \n      // Apenas administradores podem ler, atualizar (aprovar/rejeitar) ou apagar sugestões.\n      allow read, update, delete: if isAdmin();\n    }\n    \n    // Regras para a coleção de notificações\n    match /notifications/{notificationId} {\n      // O utilizador só pode ler e atualizar as suas próprias notificações.\n      allow read, update: if isRequestingOwnData(resource.data.userId) || isAdmin();\n      allow create, delete, list: if isAdmin(); // A criação é controlada pelo backend (actions)\n    }\n\n    // Permitir consulta de grupo de coleções (collectionGroup) para 'follows'\n    // Necessário para encontrar todos os seguidores de um ATM.\n    // A segurança é aplicada implicitamente, pois as notificações só são criadas no backend.\n    match /{path=**}/follows/{followId} {\n      allow read: if isUserAuthenticated(); // Permitir leitura para a query do backend\n    }\n  }\n}\n"}]}}
[debug] [2025-09-10T12:12:05.895Z] Sep 10, 2025 12:12:05 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Sep 10, 2025 12:12:05 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2025-09-10T12:12:07.002Z] Sep 10, 2025 12:12:07 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Sep 10, 2025 12:12:07 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\n"}}
[debug] [2025-09-10T12:12:12.723Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules 200
[debug] [2025-09-10T12:12:12.728Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules {}
[info] ✔  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2025-09-10T12:16:46.131Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules [none]
[debug] [2025-09-10T12:16:46.131Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\n\nservice cloud.firestore {\n  match /databases/{database}/documents {\n\n    // Helper function to check for admin role\n    function isAdmin() {\n      // Check if the user is the specific admin user by UID\n      return request.auth != null && request.auth.uid == 'admin_user_id';\n    }\n\n    // Default deny all reads/writes\n    match /{document=**} {\n      allow read, write: if false;\n    }\n\n    // Admins have full read/write access to all collections\n    match /{path=**} {\n      allow read, write: if isAdmin();\n    }\n    \n    // ATMs: Publicly readable, writable only by admins\n    match /atms/{atmId} {\n      allow read: if true;\n      allow write: if isAdmin();\n    }\n\n    // ATM Suggestions: Creatable by any authenticated user, manageable by admins\n    match /atm_suggestions/{suggestionId} {\n      allow create: if request.auth != null;\n      allow read, update, delete: if isAdmin();\n    }\n\n    // Users collection\n    match /users/{userId} {\n      // Users can read/update their own profile. Only admins can delete/create other users.\n      allow read, update: if request.auth.uid == userId;\n      allow create, delete, list: if isAdmin();\n      \n      // Users can manage their own 'follows' subcollection\n      match /follows/{atmId} {\n        allow read, write, delete: if request.auth.uid == userId;\n      }\n    }\n    \n    // Notifications: Users can only access their own\n    match /notifications/{notificationId} {\n        allow read, write, create: if request.auth != null && request.resource.data.userId == request.auth.uid;\n    }\n\n    // Collection Group Queries\n    // Allow admins to query the 'follows' group to send notifications\n    match /{path=**}/follows/{atmId} {\n      allow read: if isAdmin();\n    }\n  }\n}\n"}]}}
[debug] [2025-09-10T12:16:46.142Z] Sep 10, 2025 12:16:46 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Sep 10, 2025 12:16:46 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2025-09-10T12:16:46.314Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules 200
[debug] [2025-09-10T12:16:46.314Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules {}
[info] ✔  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2025-09-10T12:17:36.621Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules [none]
[debug] [2025-09-10T12:17:36.621Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\n\nservice cloud.firestore {\n  match /databases/{database}/documents {\n\n    // Helper function to check if the user is an admin\n    function isAdmin() {\n      return request.auth != null && request.auth.uid == 'admin_user_id';\n    }\n\n    // Default deny all access\n    match /{document=**} {\n      allow read, write: if false;\n    }\n\n    // ATMs: Readable by anyone, writable only by admin\n    match /atms/{atmId} {\n      allow read: if true;\n      allow update, create, delete: if isAdmin();\n    }\n\n    // Users: Can only read/write their own data. Admin can read anyone's data.\n    match /users/{userId} {\n      allow read, update, delete: if request.auth != null && request.auth.uid == userId;\n      allow create: if request.auth != null; // Allow user creation on signup\n      \n      // Admin can read all user documents\n      allow get: if isAdmin();\n      allow list: if isAdmin();\n\n      // Follows subcollection: Users can only manage their own follows.\n      match /follows/{atmId} {\n        allow read, write: if request.auth != null && request.auth.uid == userId;\n      }\n    }\n    \n    // ATM Suggestions: Writable by authenticated users, readable by admin.\n    match /atm_suggestions/{suggestionId} {\n      allow create: if request.auth != null;\n      allow read, update: if isAdmin();\n    }\n    \n    // Notifications: Writable by server (admin), readable only by the concerned user.\n    match /notifications/{notificationId} {\n        allow read: if request.auth != null && request.auth.uid == resource.data.userId || isAdmin();\n        allow create: if isAdmin(); // Only server/admin can create notifications\n    }\n\n    // Collection Group query for follows: Necessary for the notification function\n    match /{path=**}/follows/{atmId} {\n      allow read: if isAdmin(); // Allows admin/server function to query across all 'follows' collections\n    }\n  }\n}\n"}]}}
[debug] [2025-09-10T12:17:36.657Z] Sep 10, 2025 12:17:36 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Sep 10, 2025 12:17:36 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2025-09-10T12:17:36.841Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules 200
[debug] [2025-09-10T12:17:36.844Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules {}
[info] ✔  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2025-09-10T12:20:53.265Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules [none]
[debug] [2025-09-10T12:20:53.265Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\n\nservice cloud.firestore {\n  match /databases/{database}/documents {\n    \n    // Helper function to check if the user is an admin\n    function isAdmin() {\n      return request.auth != null && request.auth.uid == 'admin_user_id';\n    }\n\n    // ---------------- ATMs ----------------\n    match /atms/{atmId} {\n      allow read: if true; // público\n      allow create, update, delete: if isAdmin();\n    }\n\n    // ---------------- Users ----------------\n    match /users/{userId} {\n      // Admin pode ler todos, usuários só o próprio\n      allow read: if (request.auth != null && request.auth.uid == userId) || isAdmin();\n      \n      // O próprio usuário pode modificar só seu doc\n      allow update, delete: if request.auth != null && request.auth.uid == userId;\n      \n      // Criar conta ao registrar\n      allow create: if request.auth != null;\n\n      // Subcoleção follows\n      match /follows/{atmId} {\n        allow read, write: if request.auth != null && request.auth.uid == userId;\n      }\n    }\n\n    // ---------------- ATM Suggestions ----------------\n    match /atm_suggestions/{suggestionId} {\n      allow create: if request.auth != null;\n      allow read, update: if isAdmin();\n    }\n    \n    // ---------------- Notifications ----------------\n    match /notifications/{notificationId} {\n      allow read: if (request.auth != null && resource.data.userId == request.auth.uid) || isAdmin();\n      allow create: if isAdmin();\n    }\n\n    // ---------------- Collection Group para follows ----------------\n    match /{path=**}/follows/{atmId} {\n      allow read: if isAdmin();\n    }\n\n    // ---------------- Default deny (fallback) ----------------\n    match /{document=**} {\n      allow read, write: if false;\n    }\n  }\n}\n"}]}}
[debug] [2025-09-10T12:20:53.278Z] Sep 10, 2025 12:20:53 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Sep 10, 2025 12:20:53 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2025-09-10T12:20:53.413Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules 200
[debug] [2025-09-10T12:20:53.413Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules {}
[info] ✔  firestore: Rules updated. 
